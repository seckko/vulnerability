<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Registration extends CI_Controller {

	public function __construct(){
		parent::__construct();	
		
	}


	public function index()
	{
		$data['title']	= "Registration";
		$this->load->view('registration/options', $data);
	}


	public function new_student(){
		if(!$this->input->is_ajax_request())
			{
				$data['title']		= "Registration : New Student";
				$data['level'] 		= $this->module->get_table('v_grade_level');
				$data['sy_id']		= $this->module->get_active_sy();
				$data['stud_no']	= $this->module->get_new_student_no();
				$this->load->view('registration/new_student', $data);
			}
		else
		{
			//$stud_type 					= $this->input->post('stud_type', true);
			$sy_id 						= $this->input->post('sy_id', true);
			$stud_no 					= $this->module->get_new_student_no();
			$stud_lrn 					= $this->input->post('stud_lrn', true);
			$stud_lastname				= ucwords(strtolower($this->input->post('stud_lastname', true)));
			$stud_firstname				= ucwords(strtolower($this->input->post('stud_firstname', true)));
			$stud_middlename			= ucwords(strtolower($this->input->post('stud_middlename', true)));
			$stud_suffix				= ucwords(strtolower($this->input->post('stud_suffix', true)));
			$stud_nickname				= ucwords(strtolower($this->input->post('stud_nickname', true)));
			$stud_birthdate				= date('Y-m-d', strtotime($this->input->post('stud_birthdate', true)));
			$stud_gender				= $this->input->post('stud_gender', true);
			$stud_address 				= ucwords(strtolower($this->input->post('stud_address', true)));
			$stud_handedness 			= $this->input->post('stud_handedness', true);
			$stud_religion				= $this->input->post('stud_religion', true);
			$stud_father_name			= strtolower($this->input->post('stud_father_name', true));
			$stud_father_occupation		= ucwords(strtolower($this->input->post('stud_father_occupation', true)));
			$stud_father_education		= ucwords(strtolower($this->input->post('stud_father_education', true)));
			$stud_father_address		= ucwords(strtolower($this->input->post('stud_father_address', true)));
			$stud_father_contact		= $this->input->post('stud_father_contact', true);
			$stud_father_email			= $this->input->post('stud_father_email', true);
			$stud_mother_name			= strtolower($this->input->post('stud_mother_name', true));
			$stud_mother_occupation		= ucwords(strtolower($this->input->post('stud_mother_occupation', true)));
			$stud_mother_education		= ucwords(strtolower($this->input->post('stud_mother_education', true)));
			$stud_mother_address		= ucwords(strtolower($this->input->post('stud_mother_address', true)));
			$stud_mother_contact		= $this->input->post('stud_mother_contact', true);
			$stud_mother_email			= $this->input->post('stud_mother_email', true);
			$stud_emergency_name		= strtolower($this->input->post('stud_emergency_name', true));
			$stud_emergency_contact		= $this->input->post('stud_emergency_contact', true);
			$stud_relationship			= ucwords(strtolower($this->input->post('stud_relationship', true)));
			$stud_guardian_name			= strtolower($this->input->post('stud_guardian_name', true));
			$stud_guardian_contact		= $this->input->post('stud_guardian_contact', true);
			$stud_guar_name				= $this->input->post('stud_guar_name', true);
			$stud_guar_relation			= ucwords(strtolower($this->input->post('stud_guar_relation', true)));
			$stud_guar_address			= ucwords(strtolower($this->input->post('stud_guar_address', true)));
			$stud_guar_contact			= $this->input->post('stud_guar_contact', true);
			$stud_prev_schl_name		= ucwords(strtolower($this->input->post('stud_prev_schl_name', true)));
			$stud_prev_level			= ucwords(strtolower($this->input->post('stud_prev_level', true)));
			$stud_prev_date				= $this->input->post('stud_prev_date', true);

			$lvl_id 					= $this->input->post('lvl_id',true);
			$se_mode_payment 			= $this->input->post('as_mode', true); 



			$this->form_validation->set_rules('stud_lrn', 'Student LRN', 'trim|is_unique[students.stud_lrn]');

				if ($this->form_validation->run() == FALSE)
	                {
	                	$this->module->my_return(false, validation_errors());
	                }
	            else
	                {
	                	$data = array (
	                		'stud_no' 					=> $stud_no,
							'stud_lrn' 					=> $stud_lrn,
							'stud_lastname' 			=> $stud_lastname,
							'stud_firstname' 			=> $stud_firstname,
							'stud_middlename' 			=> $stud_middlename,
							'stud_suffix' 				=> $stud_suffix,
							'stud_nickname' 			=> $stud_nickname,
							'stud_birthdate' 			=> $stud_birthdate,
							'stud_gender' 				=> $stud_gender,
							'stud_address' 				=> $stud_address,
							'stud_handedness' 			=> $stud_handedness,
							'stud_religion' 			=> $stud_religion,
							'stud_father_name' 			=> $stud_father_name,
							'stud_father_occupation' 	=> $stud_father_occupation,
							'stud_father_education'		=> $stud_father_education,
							'stud_father_address' 		=> $stud_father_address,
							'stud_father_contact' 		=> $stud_father_contact,
							'stud_father_email' 		=> $stud_father_email,
							'stud_mother_name' 			=> $stud_mother_name,
							'stud_mother_occupation' 	=> $stud_mother_occupation,
							'stud_mother_education'		=> $stud_mother_education,
							'stud_mother_address' 		=> $stud_mother_address,
							'stud_mother_contact'		=> $stud_mother_contact,
							'stud_mother_email' 		=> $stud_mother_email,
							'stud_emergency_name' 		=> $stud_emergency_name,
							'stud_emergency_contact' 	=> $stud_emergency_contact,
							'stud_relationship' 		=> $stud_relationship,
							'stud_guardian_name' 		=> $stud_guardian_name,
							'stud_guardian_contact' 	=> $stud_guardian_contact,
							'stud_guar_name' 			=> $stud_guar_name,
							'stud_guar_relation' 		=> $stud_guar_relation,
							'stud_guar_address' 		=> $stud_guar_address,
							'stud_guar_contact' 		=> $stud_guar_contact
	                	);


	                	$check = $this->module->get_query("SELECT * FROM students WHERE stud_lastname = '".$stud_lastname."' AND stud_firstname = '".$stud_firstname."' AND stud_birthdate = '".$stud_birthdate."' ");

	                	if($check->num_rows() < 1 ){

	                		if($this->module->insert('students', $data)){
								$stud_id  	= $this->db->insert_id();
		                		$data 		= $this->input->post(null,true);
						        foreach($data as $d => $k){

									if(strpos($d, 'sib')!== FALSE){
										$sib_name 	= empty($k["sib_name"])		?'': $k["sib_name"];
										$sib_level 	= empty($k["sib_level"])	?'': $k["sib_level"];
										$sib_age 	= empty($k["sib_age"])		?'': $k["sib_age"];
										$sib_gender = empty($k["sib_gender"])	?'': $k["sib_gender"];
										$sib_school = empty($k["sib_school"])	?'': $k["sib_school"];

										if(!empty($sib_name) ){
											$siblings = array(
												"stud_id" 		=>	$stud_id,
												"sib_name"		=>	ucwords(strtolower($sib_name)),
												"sib_age"		=>	$sib_age,
												"sib_gender"	=>	$sib_gender,
												"sib_level"		=>	$sib_level,
												"sib_school"	=>	ucwords(strtolower($sib_school))
											);

											if (!empty($siblings)){
												$this->module->insert('sibling', $siblings);
											}
										}
									}
								}/* End of Sibling*/

								$prev_school_data = array(
									'stud_id' 				=> $stud_id,
									'sy_id' 				=> $sy_id,
									'lsa_prev_schl_name' 	=> $stud_prev_schl_name,
									'lsa_prev_level' 		=> $stud_prev_level,
									'lsa_prev_date_attended'=> $stud_prev_date
								);

								$this->module->insert('student_last_school_attended', $prev_school_data);

								$student_enrollment = array(
									'stud_id' 			=> $stud_id,
									'sy_id' 			=> $sy_id,
									'lvl_id' 			=> $lvl_id,
									'se_stud_type' 		=> 'N',
									'se_mode_payment' 	=> $se_mode_payment,
									'se_status' 		=> 'Registered'
								);


								$student_queue = array(
									'stud_id' 				=> $stud_id, 
									'sa_queue_no' 			=> $this->module->get_queue_no(), 
									'sa_assessment_status' 	=> 'PENDING',
									'sy_id' 				=> $sy_id,
									'lvl_id' 				=> $lvl_id/*,
									'sad_is_scholar' 		=> 'N'*/
								);

								$this->module->insert('student_assessment', $student_queue);

								$check_enrollment = $this->module->table_where('student_enrollment', array('stud_id' => $stud_id, 'sy_id' => $sy_id));

								if($check_enrollment->num_rows() < 1){
									$this->module->insert('student_enrollment', $student_enrollment);
								}else{
									$se_id = $check_enrollment->row('se_id');
									$this->module->update('student_enrollment', $student_enrollment, array('se_id' => $se_id));
								}

								$this->module->cust_return(true,'<strong>Successfully registered.</strong><br/> Go to CASHIER for the next step, Thank you!', $stud_id);

								$stud_fullname 		= $stud_lastname.', '.$stud_firstname;
								$update_reservation = $this->module->get_query("SELECT * FROM student_reservation WHERE stud_fullname LIKE '%".$stud_fullname."%' ");

								if($update_reservation->num_rows() > 0){
									$this->module->get_query("UPDATE student_reservation SET stud_id = ".$stud_id." WHERE stud_fullname LIKE '%".$stud_fullname."%' AND sy_id = ".$sy_id." ");
								}

								
							}else{
								$this->module->my_return(false, 'Please check you input data.');
							}

	                	}else{
	                		$this->module->my_return(false, 'Learners already in the database.');
	                	}
	                	

	                	
	                }
		}
	}

	public function old_student(){
		if(!$this->input->is_ajax_request())
			{
				$data['title']		= "Registration : Old Student";
				$data['level'] 		= $this->module->get_table('v_grade_level');
				$data['sy_id']		= $this->module->get_active_sy();
				$data['stud_no']	= $this->module->get_new_student_no();
				//$data['student']	= $this->module->get_query("SELECT * FROM student");
				$data['student']	= $this->module->get_query("SELECT * FROM v_search_learner WHERE stud_id NOT IN ( SELECT stud_id FROM student_enrollment) ORDER BY stud_lastname ASC ");
				//$data['reservation']= $this->module->table_where('v_reservation', array('sy_id' => $this->module->get_active_sy(),  ));
				$this->load->view('registration/old_student', $data);
			}
		else
		{

				$stud_id 					= $this->input->post('stud_id', true);
				$sy_id 						= $this->input->post('sy_id', true);
				$stud_lrn 					= $this->input->post('stud_lrn', true);
				$stud_lastname				= ucwords(strtolower($this->input->post('stud_lastname', true)));
				$stud_firstname				= ucwords(strtolower($this->input->post('stud_firstname', true)));
				$stud_middlename			= ucwords(strtolower($this->input->post('stud_middlename', true)));
				$stud_suffix				= ucwords(strtolower($this->input->post('stud_suffix', true)));
				$stud_nickname				= ucwords(strtolower($this->input->post('stud_nickname', true)));
				$stud_birthdate				= date('Y-m-d', strtotime($this->input->post('stud_birthdate', true)));
				$stud_gender				= $this->input->post('stud_gender', true);
				$stud_address 				= ucwords(strtolower($this->input->post('stud_address', true)));
				$stud_handedness 			= $this->input->post('stud_handedness', true);
				$stud_religion				= $this->input->post('stud_religion', true);
				$stud_father_name			= strtolower($this->input->post('stud_father_name', true));
				$stud_father_occupation		= ucwords(strtolower($this->input->post('stud_father_occupation', true)));
				$stud_father_education		= ucwords(strtolower($this->input->post('stud_father_education', true)));
				$stud_father_address		= ucwords(strtolower($this->input->post('stud_father_address', true)));
				$stud_father_contact		= $this->input->post('stud_father_contact', true);
				$stud_father_email			= $this->input->post('stud_father_email', true);
				$stud_mother_name			=strtolower($this->input->post('stud_mother_name', true));
				$stud_mother_occupation		= ucwords(strtolower($this->input->post('stud_mother_occupation', true)));
				$stud_mother_education		= ucwords(strtolower($this->input->post('stud_mother_education', true)));
				$stud_mother_address		= ucwords(strtolower($this->input->post('stud_mother_address', true)));
				$stud_mother_contact		= $this->input->post('stud_mother_contact', true);
				$stud_mother_email			= $this->input->post('stud_mother_email', true);
				$stud_emergency_name		= strtolower($this->input->post('stud_emergency_name', true));
				$stud_emergency_contact		= $this->input->post('stud_emergency_contact', true);
				$stud_relationship			= ucwords(strtolower($this->input->post('stud_relationship', true)));
				$stud_guardian_name			= strtolower($this->input->post('stud_guardian_name', true));
				$stud_guardian_contact		= $this->input->post('stud_guardian_contact', true);
				$stud_guar_name				= strtolower($this->input->post('stud_guar_name', true));
				$stud_guar_relation			= ucwords(strtolower($this->input->post('stud_guar_relation', true)));
				$stud_guar_address			= ucwords(strtolower($this->input->post('stud_guar_address', true)));
				$stud_guar_contact			= $this->input->post('stud_guar_contact', true);
				$stud_prev_schl_name		= ucwords(strtolower($this->input->post('stud_prev_schl_name', true)));
				$stud_prev_level			= ucwords(strtolower($this->input->post('stud_prev_level', true)));
				$stud_prev_date				= $this->input->post('stud_prev_date', true);

				$lvl_id 					= $this->input->post('lvl_id',true);
				$se_mode_payment 			= $this->input->post('as_mode', true); 



				
		                	$data = array (
								'stud_lrn' 					=> $stud_lrn,
								'stud_lastname' 			=> $stud_lastname,
								'stud_firstname' 			=> $stud_firstname,
								'stud_middlename' 			=> $stud_middlename,
								'stud_suffix' 				=> $stud_suffix,
								'stud_nickname' 			=> $stud_nickname,
								'stud_birthdate' 			=> $stud_birthdate,
								'stud_gender' 				=> $stud_gender,
								'stud_address' 				=> $stud_address,
								'stud_handedness' 			=> $stud_handedness,
								'stud_religion' 			=> $stud_religion,
								'stud_father_name' 			=> $stud_father_name,
								'stud_father_occupation' 	=> $stud_father_occupation,
								'stud_father_education'		=> $stud_father_education,
								'stud_father_address' 		=> $stud_father_address,
								'stud_father_contact' 		=> $stud_father_contact,
								'stud_father_email' 		=> $stud_father_email,
								'stud_mother_name' 			=> $stud_mother_name,
								'stud_mother_occupation' 	=> $stud_mother_occupation,
								'stud_mother_education'		=> $stud_mother_education,
								'stud_mother_address' 		=> $stud_mother_address,
								'stud_mother_contact'		=> $stud_mother_contact,
								'stud_mother_email' 		=> $stud_mother_email,
								'stud_emergency_name' 		=> $stud_emergency_name,
								'stud_emergency_contact' 	=> $stud_emergency_contact,
								'stud_relationship' 		=> $stud_relationship,
								'stud_guardian_name' 		=> $stud_guardian_name,
								'stud_guardian_contact' 	=> $stud_guardian_contact,
								'stud_guar_name' 			=> $stud_guar_name,
								'stud_guar_relation' 		=> $stud_guar_relation,
								'stud_guar_address' 		=> $stud_guar_address,
								'stud_guar_contact' 		=> $stud_guar_contact
		                	);

		                	$this->module->update('students', $data, array('stud_id' => $stud_id));

		                	$data 		= $this->input->post(null,true);
					        foreach($data as $d => $k){

								if(strpos($d, 'sib')!== FALSE){
									$sib_name 	= empty($k["sib_name"])		?'': $k["sib_name"];
									$sib_level 	= empty($k["sib_level"])	?'': $k["sib_level"];
									$sib_age 	= empty($k["sib_age"])		?'': $k["sib_age"];
									$sib_gender = empty($k["sib_gender"])	?'': $k["sib_gender"];
									$sib_school = empty($k["sib_school"])	?'': $k["sib_school"];

									if(!empty($sib_name) ){
										$siblings = array(
											"stud_id" 		=>	$stud_id,
											"sib_name"		=>	ucwords(strtolower($sib_name)),
											"sib_age"		=>	$sib_age,
											"sib_gender"	=>	$sib_gender,
											"sib_level"		=>	$sib_level,
											"sib_school"	=>	ucwords(strtolower($sib_school))
										);

										if (!empty($siblings)){
											$this->module->insert('sibling', $siblings);
										}
									}
								}
							}/* End of Sibling*/


							$student_enrollment = array(
								'stud_id' 			=> $stud_id,
								'sy_id' 			=> $sy_id,
								'lvl_id' 			=> $lvl_id,
								'se_stud_type' 		=> 'O',
								'se_mode_payment' 	=> $se_mode_payment,
								'se_status' 		=> 'Registered'
							);


							$check_enrollment = $this->module->table_where('student_enrollment', array('stud_id' => $stud_id, 'sy_id' => $sy_id));
							if($check_enrollment->num_rows() < 1){
								$this->module->insert('student_enrollment', $student_enrollment);
							}else{
								$se_id = $check_enrollment->row('se_id');
								$this->module->update('student_enrollment', $student_enrollment, array('se_id' => $se_id));
							}

							$student_queue = array(
								'stud_id' 				=> $stud_id, 
								'sa_queue_no' 			=> $this->module->get_queue_no(), 
								'sa_assessment_status' 	=> 'PENDING',
								'sy_id' 				=> $sy_id,
								'lvl_id' 				=> $lvl_id,
								'sa_is_scholar' 		=> 'N'
							);

							$check_assessment = $this->module->table_where('student_assessment', array('stud_id' => $stud_id, 'sy_id' => $sy_id));
							if($check_assessment->num_rows() < 1){
								$this->module->insert('student_assessment', $student_queue);
							}else{
								$sa_id = $check_assessment->row('sa_id');
								$this->module->update('student_assessment', $student_queue, array('sa_id' => $sa_id));
							}

							//$this->module->insert('student_assessment', $student_queue);

							$this->module->cust_return(true,'<strong>Successfully registered.</strong><br/> Go to CASHIER for the next step, Thank you!', $stud_id);

	                	
		} /*End ajax request*/
	}


	public function get_learners_data(){
		$stud_id 			= $this->uri->segment(3);
		$data['sy_id']		= $this->module->get_active_sy();
		$data['student']	= $this->module->table_where('students', array('stud_id' => $stud_id));
		$data['last_school']= $this->module->get_query("SELECT * FROM student_last_school_attended WHERE stud_id = ".$stud_id." ORDER BY lsa_id DESC  ");
		$data['siblings']	= $this->module->table_where('sibling', array('stud_id' => $stud_id));
		$data['level'] 		= $this->module->get_table('v_grade_level');
		$data['reserve']	= $this->module->table_where('v_reservation', array('stud_id' => $stud_id, 'sy_id' => $data['sy_id']));
		$data['lvl_sec']	= $this->module->get_query("SELECT * FROM v_search_learner WHERE stud_id = ".$stud_id." ");
		$this->load->view('registration/tbl_learners_data', $data);
	}


	public function run(){
		$student = $this->module->get_table('students');

		foreach($student->result() as $r){

			$stud_id = $r->stud_id;
			$prev_school_data = array(
				'stud_id' 				=> $stud_id,
				'sy_id' 				=> 1,
				'lsa_prev_schl_name' 	=> $r->stud_prev_schl_name,
				'lsa_prev_level' 		=> $r->stud_prev_level,
				'lsa_prev_date_attended'=> $r->stud_prev_date
			);

			$this->module->insert('student_last_school_attended', $prev_school_data);

		}
	}


	public function print_student(){
		$stud_id = $this->uri->segment(3);

		$data['title'] 				= 'Student Profile';
		$data['student'] 			= $this->module->table_where('students', array('stud_id' => $stud_id));
		$data['sibling'] 			= $this->module->table_where('sibling', array('stud_id' => $stud_id));
		$data['student_enrollment'] = $this->module->table_where('student_enrollment', array('stud_id' => $stud_id));
		$this->load->view('registration/print_student', $data);
	}


	

} /*End of file*/