<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Assessment extends CI_Controller {

	public function __construct(){
		parent::__construct();	
		
	}


	public function index()
	{
		$data['title']		= "Assessment";
		$sy_id 				= $this->module->get_active_sy();
		$data['queueing']	= $this->module->get_query("SELECT * FROM v_student_enrollment_assessment WHERE sa_assessment_status = 'PENDING' AND sy_id = ".$sy_id." ORDER BY sa_queue_no ASC "); 
		$this->load->view('assessment/queueing', $data);
	}

	public function create_assessment(){
		$data['title']		= "Assessment";
		$stud_id 			= $this->uri->segment(3); 
		$sy_id 				= $this->module->get_active_sy();
		$data['sy_id'] 		= $sy_id;

		$student_assessment = $this->module->get_query("SELECT * FROM v_student_enrollment_assessment WHERE sy_id = ".$sy_id." AND stud_id = ".$stud_id."  ");
		$stud_name 			= ucwords(strtolower($student_assessment->row('stud_lastname').', '.$student_assessment->row('stud_firstname')));
		
		$data['assessment']	= $student_assessment; 

		$data['fee_schedule'] 	= $this->module->table_where('v_active_fee_sched', array('dept_id' => $data['assessment']->row('dept_id'), 'fee_type' => 'CASH'));
		$data['due_account'] 	= $this->module->get_query("SELECT s.sy_name, i.*  FROM school_year AS s, installment_hdr AS i WHERE i.sy_id = s.sy_id AND stud_id = ".$stud_id." ") ;

		$sa_id 				= $this->uri->segment(4);
		$data['assess'] 	= $this->module->table_where('v_student_assessment_detail', array('sa_id' => $sa_id));
		//$data['reservation']= $this->module->get_query( "SELECT * FROM v_reservation WHERE stud_fullname LIKE '%".$stud_name."%'" );
		
		$data['reservation']= $this->module->get_query( "SELECT * FROM v_student_class_list WHERE stud_birthdate = '".$student_assessment->row('stud_birthdate')."' AND stud_lastname LIKE '%".$student_assessment->row('stud_lastname')."%' AND  stud_firstname LIKE '%".$student_assessment->row('stud_firstname')."%' AND cl_is_reserved = 'Y' " );

		//echo $this->db->last_query();

		$this->load->view('assessment/create_assessment', $data);
	}

	public function get_section(){
		$txt_lvl = $this->uri->segment(3);
		$section = $this->module->get_query("SELECT * FROM v_sy_section WHERE sy_selected = 'Y' AND lvl_id = ".$txt_lvl." ORDER BY sec_sort ASC");
		foreach($section->result() as $r){
			echo '<option value="'.$r->sec_id.'">'.$r->sec_name.'</option>';
		}
	}

	public function compute_assessment(){
		$sa_id 							=  $this->input->post('sa_id', true);
		$stud_id 						=  $this->input->post('stud_id', true);
		$stud_lastname 					=  $this->input->post('stud_lastname', true);
		$stud_firstname 				=  $this->input->post('stud_firstname', true);
		$stud_birthdate 				=  $this->input->post('stud_birthdate', true);
		$dept_id 						=  $this->input->post('dept_id', true);
		$se_stud_type 					=  $this->input->post('se_stud_type', true);
		$lvl_id 						=  $this->input->post('lvl_id', true);
		$sec_id 						=  $this->input->post('sec_id', true);
		$se_mode_payment 				=  $this->input->post('se_mode_payment', true);
		$sad_has_sib_discount 			=  $this->input->post('sad_has_sib_discount', true);
		$sad_is_reserved 				=  $this->input->post('sad_is_reserved', true);
		$sad_books 						=  str_replace( ',', '', $this->input->post('sad_books', true));
		$sad_notebooks 					=  str_replace( ',', '', $this->input->post('sad_notebooks', true));
		$sad_uniforms 					=  str_replace( ',', '', $this->input->post('sad_uniforms', true));
		$sad_shoes 						=  str_replace( ',', '', $this->input->post('sad_shoes', true));
		$sad_is_scholar 				=  $this->input->post('sad_is_scholar', true);
		$sad_percentage 				=  $this->input->post('sad_percentage', true);
		$sad_scholar_tuition_fee 		=  str_replace( ',', '', $this->input->post('sad_scholar_tuition_fee', true));
		$sad_scholar_miscellaneous_fee 	=  str_replace( ',', '', $this->input->post('sad_scholar_miscellaneous_fee', true) );


		$sy_id = $this->module->table_where('school_year', array('sy_selected' => 'Y'))->row('sy_id'); 
		//$check_max = $this->module->check_max_section($sy_id, $sec_id);

		$reservation 				= 0;
		$sad_reservation_amount 	= 0;
		$sad_sib_discount_amount 	= 0;

		$flag = 0;/* 0 - available, 1 - Section is full*/
	    $msg  = '';

	    $check_class_list_count = 0;
	    $check_department_department = '';

	    $check_student 						= $this->module->get_query("SELECT * FROM student_class_list WHERE sy_id = ".$sy_id." AND stud_birthdate = '".$stud_birthdate."' AND stud_lastname LIKE '%".$stud_lastname."%' AND stud_firstname LIKE '%".$stud_firstname."%' ");
	    
	    $check_class_list_count 			= $this->module->get_query("SELECT COUNT(*) as cnt FROM student_class_list WHERE sy_id = ".$sy_id." AND lvl_id =".$lvl_id." AND sec_id = ".$sec_id." ")->row('cnt');
		$check_department_department 		= $this->module->get_query("SELECT * FROM v_sy_section WHERE sy_id = ".$sy_id." AND lvl_id =".$lvl_id." AND sec_id = ".$sec_id." ")->row('dept_name');



			/*if($check_department_department == 'Pre-School'){
				if($check_class_list_count < 16){
					//OK
					//echo 'Pre-School';
					if($check_student->num_rows() < 1 ){
						$flag = 1;
					}else{
						$flag = 0;
					}
				}else{
					$flag = 1;
				}
			}else{
				if($check_class_list_count < 26){
					//OK
					if($check_student->num_rows() < 1 ){
						$flag = 1;
						//echo 'Grade School 0';
					}else{
						$flag = 0;
						//echo 'Grade School 1';
					}
				}else{
					$flag = 1;
				}
			}*/
		
		
		//$treservation = $this->module->get_query("select dept_name, count(*) as rcnt from v_reservation where sy_id = ".$sy_id." and sec_id = ".$sec_id." ");
	    //$assessment   = $this->module->get_query("select count(*) as acnt from v_student_enrollment_assessment where sy_id = ".$sy_id." and sec_id = ".$sec_id." ");

	    //$rcnt       = $treservation->row('rcnt');
	    //$acnt       = $assessment->row('acnt');
	    //$rdept_name = $treservation->row('dept_name');
	   // $adept_name = $assessment->row('dept_name');
	    //$count      = $rcnt + $acnt;

	    //echo $count.'-'.$rdept_name.'<br/>';
	    
	    

	    /*if($se_stud_type == 'O'){
	    	$check_reservation = $this->module->table_where('v_reservation', array('sy_id' => $sy_id, 'sec_id' => $sec_id, 'stud_id' => $stud_id) );
	    }else{
	    	$name = ucwords($this->input->post('stud_name', true));
	    	$check_reservation = $this->module->get_query("SELECT * from v_reservation WHERE sy_id = ".$sy_id." AND stud_fullname LIKE '%".$name."' ");
	    }*/

	    //echo $name;
	    //echo $this->db->last_query();

	    

	    /*if( $rdept_name == 'Pre-School') {
	    	if($count >= 15){
	    		
	    		if($sad_is_reserved == 'Y' ){
	    			$flag 	= 1;
	    		}else{
	    			$flag 	= 0;
	    		}

	    	}else{
	    		$flag 	= 0;
	    	}
	    }else{
	    	if($count >= 25){
	    		//$flag 	= 1;

	    		if($sad_is_reserved == 'Y'){
	    			$flag 	= 1;
	    		}else{
	    			$flag 	= 0;
	    		}

	    	}else{
	    		$flag 	= 0;
	    	}
	    }*/


	    /*if($sad_is_reserved == 'Y'){
	    	$flag 	= 0;
	    }else{
	    	if( $rdept_name == 'Pre-School') {
	    		if($count > 15){
	    			$flag 	= 1;
	    		}else{
	    			$flag 	= 0;
	    		}
	    	}else{
	    		if($count > 25){
	    			$flag 	= 1;
	    		}else{
	    			$flag 	= 0;
	    		}
	    	}
	    }*/

	    $data['flag']	= $flag;
	    $data['count']  = $check_class_list_count.'-'.$check_department_department;

	    if($sad_is_scholar == 'N'){

		    $fee_schedule = $this->module->table_where('v_active_fee_sched', array('dept_id' => $dept_id, 'fee_type' => $se_mode_payment));
		    foreach($fee_schedule->result() as $r){
				$sad_tuition_fee 		= $r->fee_tf;
				$sad_miscellaneous_fee 	= $r->fee_other_schl_fee;
				$amount_to_pay 			= $r->fee_amnt_to_pay;
				
				/*check if reserved*/
				if($sad_is_reserved == 'Y'){
					if($se_stud_type == 'O'){
						$sad_reservation_amount = 1000;
					}else{
						$sad_reservation_amount = 2000;
					}

					$reservation = $sad_reservation_amount;
				}else{
					$reservation = $reservation;
				}

				$sad_sub_total	 	= $amount_to_pay;

				/*check if has sibling discount*/
				if($sad_has_sib_discount == 'Y'){
					$sad_sib_discount_amount 	= $sad_tuition_fee * 0.1;
					$discounted_tf 				= $sad_sub_total - $sad_sib_discount_amount;
				}else{
					$sad_sib_discount_amount 	= $sad_sib_discount_amount;
					$discounted_tf 				= 0;
				}

				$sad_total_school_fees 		= $sad_sub_total - $reservation - $sad_sib_discount_amount;
				$sad_total_other_fees 			= $sad_books + $sad_notebooks + $sad_uniforms + $sad_shoes;
				$sad_total_assessed_fee 	= $sad_total_school_fees + $sad_total_other_fees;
			}

			$fee_data = array (
				'stud_id' 						=> $stud_id,
				'stud_lastname' 				=> $stud_lastname,
				'stud_firstname' 				=> $stud_firstname,
				'stud_birthdate' 				=> $stud_birthdate,
				'dept_id'						=> $dept_id,
				'lvl_id'						=> $lvl_id,
				'sec_id'						=> $sec_id,
				'se_stud_type'					=> $se_stud_type,
				'se_mode_payment' 				=> strtoupper($se_mode_payment),
				'sad_tuition_fee' 				=> $sad_tuition_fee ,
				'sad_miscellaneous_fee' 		=> $sad_miscellaneous_fee,
				'sad_sub_total'	 				=> $sad_sub_total,
				'discounted_tf' 				=> $discounted_tf,
				'sad_has_sib_discount' 			=> $sad_has_sib_discount,
				'sad_sib_discount_amount' 		=> $sad_sib_discount_amount,
				'sad_is_reserved' 				=> $sad_is_reserved,
				'sad_reservation_amount' 		=> $sad_reservation_amount,
				'sad_total_school_fees'			=> $sad_total_school_fees,
				'sad_books' 					=> $sad_books,
				'sad_notebooks' 				=> $sad_notebooks,
				'sad_uniforms' 					=> $sad_uniforms,
				'sad_shoes' 					=> $sad_shoes,
				'sad_total_other_fees'			=> $sad_total_other_fees,
				'sad_percentage' 				=> 0,
				'sad_scholar_tuition_fee' 		=> 0,
				'sad_scholar_miscellaneous_fee' => 0,
				'sad_scholar_sub_total' 		=> 0,
				'sad_is_scholar_mode' 			=> '',
				'sad_is_scholar' 				=> 'N',
				'sad_total_assessed_fee'		=> $sad_total_assessed_fee
			);
			
			$data['fee_data'] 		= $fee_data;
		}else{
			/*FOR SCHOLARS*/

			$sad_tuition_fee 				= str_replace( ',', '', $this->input->post('sad_tuition_fee', true));
			$sad_miscellaneous_fee 			= str_replace( ',', '', $this->input->post('sad_miscellaneous_fee', true));
			$sad_percentage 				= $this->input->post('sad_percentage', true);
			$sad_scholar_tuition_fee 		= str_replace( ',', '', $this->input->post('sad_scholar_tuition_fee', true));
			$sad_scholar_miscellaneous_fee 	= str_replace( ',', '', $this->input->post('sad_scholar_miscellaneous_fee', true));
			$sad_is_scholar_mode 			= $this->input->post('sad_is_scholar_mode', true);
			$sad_is_reserved 				= $this->input->post('sad_is_reserved', true);

			$sad_reservation_amount 		= ($sad_is_reserved == 'Y' ? 1000 : 0);
			$sad_sib_discount_amount 		= 0;

			$sad_sub_total 					= $sad_tuition_fee + $sad_miscellaneous_fee;
			$sad_total_other_fees 			= $sad_books + $sad_notebooks + $sad_uniforms + $sad_shoes;
			$sad_scholar_sub_total			= $sad_scholar_tuition_fee + $sad_scholar_miscellaneous_fee;
			$sad_total_school_fees 			= $sad_scholar_sub_total;


			if($sad_is_scholar_mode == 'Full'){
				$sad_scholar_sub_total 	= $sad_scholar_sub_total;
				$sad_total_school_fees 	= $sad_total_school_fees;
				$sad_total_assessed_fee = $sad_total_other_fees + $sad_scholar_sub_total; 
				$se_mode_payment 		= 'CASH';
			}else{
				$sad_scholar_sub_total 	= $sad_scholar_sub_total / 10;
				$sad_total_school_fees 	= $sad_total_school_fees / 10;
				$sad_total_assessed_fee = $sad_total_other_fees + $sad_total_school_fees; 
				$se_mode_payment 		= 'MONTHLY';
			}
			

			$sad_total_school_fees 	=  $sad_total_school_fees - ($sad_sib_discount_amount + $sad_reservation_amount);
			$sad_total_assessed_fee =  $sad_total_other_fees + $sad_total_school_fees;

			$fee_data = array (
				'stud_id' 						=> $stud_id,
				'stud_lastname' 				=> $stud_lastname,
				'stud_firstname' 				=> $stud_firstname,
				'stud_birthdate' 				=> $stud_birthdate,
				'dept_id'						=> $dept_id,
				'lvl_id'						=> $lvl_id,
				'sec_id'						=> $sec_id,
				'se_stud_type'					=> $se_stud_type,
				'se_mode_payment' 				=> $se_mode_payment,
				'sad_tuition_fee' 				=> $sad_tuition_fee,
				'sad_miscellaneous_fee' 		=> $sad_miscellaneous_fee,
				'sad_sub_total'	 				=> $sad_sub_total,
				'discounted_tf' 				=> 0,
				'sad_has_sib_discount' 			=> 'N',
				'sad_sib_discount_amount' 		=> 0,
				'sad_is_reserved' 				=> $sad_is_reserved,
				'sad_reservation_amount' 		=> $sad_reservation_amount,
				'sad_total_school_fees'			=> $sad_total_school_fees,
				'sad_books' 					=> $sad_books,
				'sad_notebooks' 				=> $sad_notebooks,
				'sad_uniforms' 					=> $sad_uniforms,
				'sad_shoes' 					=> $sad_shoes,
				'sad_total_other_fees'			=> $sad_total_other_fees,
				'sad_is_scholar' 				=> 'Y',
				'sad_percentage' 				=> $sad_percentage,
				'sad_scholar_tuition_fee' 		=> $sad_scholar_tuition_fee,
				'sad_scholar_miscellaneous_fee' => $sad_scholar_miscellaneous_fee,
				'sad_scholar_sub_total' 		=> $sad_scholar_sub_total,
				'sad_is_scholar_mode' 			=> $sad_is_scholar_mode,
				'sad_total_assessed_fee'		=> $sad_total_assessed_fee
			);
			$data['fee_data'] = $fee_data;
		}


		$this->load->view('assessment/tbl_assessment_detail', $data);
	}


	public function save_assessment(){
		$stud_id 		  = $this->input->post('stud_id', true);

		$stud_lastname 	  = $this->input->post('stud_lastname', true);
		$stud_firtname 	  = $this->input->post('stud_firtname', true);
		$stud_birthdate   = $this->input->post('stud_birthdate', true);
		$stud_type 		  = $this->input->post('stud_type', true);

		$sy_id 			  = $this->input->post('sy_id', true);
		$sec_id 		  = $this->input->post('sec_id', true);	
		$lvl_id 		  = $this->input->post('lvl_id', true);
		$sad_is_scholar   = $this->input->post('sad_is_scholar', true); //empty($this->input->post('sad_is_scholar', true)) ? 'N' : 'Y';	

		$sa_id 			  = $this->input->post('sa_id', true);

		$check_assessment = $this->module->table_where('student_assessment' , array('sa_id' => $sa_id ));

		if($check_assessment->num_rows() > 0 ){
			/*IF ASSESSMENT IS AVAILABLE*/

			$update_assessment = array(
				'sa_assessment_status' 	=> 'DONE',
				'lvl_id'			 	=> $lvl_id,
				'sec_id'			 	=> $sec_id,
				'sa_is_scholar' 		=> $sad_is_scholar
			);
			
			if($this->module->update('student_assessment', $update_assessment, array('sa_id' => $sa_id))){

				$assessment_data = array (
					'sa_id' 						=> $this->input->post('sa_id', true),
					'se_mode_payment' 				=> strtoupper($this->input->post('se_mode_payment', true)),
					'sad_tuition_fee' 				=> $this->input->post('sad_tuition_fee', true),
					'sad_miscellaneous_fee' 		=> $this->input->post('sad_miscellaneous_fee', true),
					'sad_sub_total'	 				=> $this->input->post('sad_sub_total', true),
					'sad_has_sib_discount' 			=> $this->input->post('sad_has_sib_discount', true),
					'sad_sib_discount_amount' 		=> $this->input->post('sad_sib_discount_amount', true),
					'sad_is_reserved' 				=> $this->input->post('sad_is_reserved', true),
					'sad_reservation_amount' 		=> $this->input->post('sad_reservation_amount', true),
					'sad_total_school_fees'			=> $this->input->post('sad_total_school_fees', true),
					'sad_books' 					=> $this->input->post('sad_books', true),
					'sad_notebooks' 				=> $this->input->post('sad_notebooks', true),
					'sad_uniforms' 					=> $this->input->post('sad_uniforms', true),
					'sad_shoes' 					=> $this->input->post('sad_shoes', true),
					'sad_total_other_fees'			=> $this->input->post('sad_total_other_fees', true),
					'sad_is_scholar' 				=> $sad_is_scholar,
					'sad_percentage' 				=> $this->input->post('sad_percentage', true),
					'sad_scholar_tuition_fee' 		=> $this->input->post('sad_scholar_tuition_fee', true),
					'sad_scholar_miscellaneous_fee' => $this->input->post('sad_scholar_miscellaneous_fee', true),
					'sad_scholar_sub_total' 		=> $this->input->post('sad_scholar_sub_total', true),
					'sad_is_scholar_mode' 			=> $this->input->post('sad_is_scholar_mode', true),
					'sad_for_payment' 				=> 'Y',
					'sad_total_assessed_fee'		=> $this->input->post('sad_total_assessed_fee', true)
				);

				$check_sa = $this->module->table_where('student_assessment_detail' , array('sa_id' => $sa_id ));

				date_default_timezone_set('Asia/Manila');

				$update_enrollment_status = array(
					'lvl_id'			=> $lvl_id,
					'sec_id'			=> $sec_id
				);

				$this->module->update('student_enrollment', $update_enrollment_status, array('stud_id' => $stud_id, 'sy_id' => $sy_id));

				if($check_sa->num_rows() > 0 ){
					$sad_id = $check_sa->row('sad_id');

					$this->module->update('student_assessment_detail', $assessment_data, array('sad_id' => $sad_id)); 
					$this->module->cust_return(true,'<strong>Successful.</strong><br/> Printing Assessment Receipt . . .', $sa_id);

				}else{
					$this->module->insert('student_assessment_detail', $assessment_data);
					$this->module->cust_return(true,'<strong>Successful.</strong><br/> Printing Assessment Receipt . . .', $sa_id);
				}
			}

		}else{
			$this->module->my_return(false, 'Assessment not found');
		}
	}


	public function print_assessment(){
		$sa_id = $this->uri->segment(3);
		$data['title'] 			= 'Print Assessment';
		$data['assessment'] 	= $this->module->table_where('v_student_assessment_detail', array('sa_id' => $sa_id));
		$this->load->view('assessment/print_assessment', $data);
	}


	public function re_assessment(){
		$data['title']		= "Re-assessment";
		$sy_id 				= $this->module->get_active_sy();
		$data['queueing']	= $this->module->get_query("SELECT * FROM v_student_enrollment_assessment WHERE sy_id = ".$sy_id." ORDER BY sa_queue_no DESC "); 
		$this->load->view('assessment/queueing_resassessment', $data);
	}

	public function assessment_payment(){
		$data['title']		= "Assessment Payment";
		$sy_id 				= $this->module->get_active_sy();
		$data['payment']	= $this->module->get_query("SELECT * FROM v_student_assessment_detail WHERE sad_for_payment = 'Y' AND sy_id = ".$sy_id." ORDER BY sa_queue_no ASC "); 
		$data['payment_record']	= $this->module->get_query("SELECT * FROM v_student_payment WHERE sy_id = ".$sy_id." ORDER BY sa_id DESC "); 
		$this->load->view('assessment/assessment_payment', $data);
	}

	public function get_payment(){
		$sa_id 				= $this->uri->segment(3);
		$sy_id 				= $this->module->get_active_sy();
		$data['payment'] 	= $this->module->get_query("SELECT * FROM v_student_assessment_detail WHERE sa_id = ".$sa_id."  AND sad_for_payment = 'Y' AND sy_id = ".$sy_id."  ");
		$this->load->view('assessment/tbl_assessment_payment', $data);
	}

	public function create_payment(){

		date_default_timezone_set('Asia/Manila');

		$stud_id 				= $this->input->post('stud_id', true);

		$stud_lastname 			= $this->input->post('stud_lastname', true);
		$stud_firstname 		= $this->input->post('stud_firstname', true);
		$stud_birthdate 		= $this->input->post('stud_birthdate', true);
		$stud_type 				= $this->input->post('stud_type', true);
		$lvl_id 				= $this->input->post('lvl_id', true);
		$sec_id 				= $this->input->post('sec_id', true);

		$sy_id 					= $this->input->post('sy_id', true);

		$sa_id 					= $this->input->post('sa_id', true);
		$sap_tuition_fee 		= $this->input->post('sap_tuition_fee', true);
		$sap_miscellaneous_fee 	= $this->input->post('sap_miscellaneous_fee', true);
		$sap_other_fee 			= $this->input->post('sap_other_fee', true);
		$sap_total_payment 		= str_replace( ',', '',$this->input->post('sap_total_payment', true));
		$sap_cash_payment 		= str_replace( ',', '',$this->input->post('sap_cash_payment', true));
		$sap_check_payment 		= str_replace( ',', '',$this->input->post('sap_check_payment', true));
		$sap_payment_type 		= $this->input->post('sap_payment_type', true);
		$sap_check_bank 		= $this->input->post('sap_check_bank', true);
		$sap_check_no 			= $this->input->post('sap_check_no', true);
		$sap_check_date 		= empty($this->input->post('sap_check_date', true)) ? '0000-00-00' : date('Y-m-d', strtotime($this->input->post('sap_check_date', true)));

		if(empty($sa_id) || $sa_id == 0){
			$this->module->my_return(false, 'Select learners payment');
		}else{

			$payment_details = array(
				'sap_tuition_fee' 			=> $sap_tuition_fee,
				'sap_miscellaneous_fee' 	=> $sap_miscellaneous_fee,
				'sap_other_fee' 			=> $sap_other_fee,
				'sap_total_payment' 		=> $sap_total_payment,
				'sap_payment_type' 			=> $sap_payment_type,
				'sap_cash_payment' 			=> $sap_cash_payment,
				'sap_check_payment' 		=> $sap_check_payment,
				'sap_check_bank' 			=> $sap_check_bank,
				'sap_check_no' 				=> $sap_check_no,
				'sap_check_date' 			=> $sap_check_date
				//'sap_payment_date' 			=> '2019-05-08 '.date('H:i:s')
			);

			$check_assessment = $this->module->table_where('student_assessment_payment', array('sa_id' => $sa_id) );

			if($check_assessment->num_rows() > 0) {
				//UPDATE
				$this->module->public_update('student_assessment_payment',$payment_details, array('sa_id' => $sa_id));
			}else{
				//INSERT
				$payment_details = array(
					'sa_id' 					=> $sa_id,
					'sap_tuition_fee' 			=> $sap_tuition_fee,
					'sap_miscellaneous_fee' 	=> $sap_miscellaneous_fee,
					'sap_other_fee' 			=> $sap_other_fee,
					'sap_total_payment' 		=> $sap_total_payment,
					'sap_payment_type' 			=> $sap_payment_type,
					'sap_cash_payment' 			=> $sap_cash_payment,
					'sap_check_payment' 		=> $sap_check_payment,
					'sap_check_bank' 			=> $sap_check_bank,
					'sap_check_no' 				=> $sap_check_no,
					'sap_check_date' 			=> $sap_check_date
					//'sap_payment_date' 			=> '2019-05-08 '.date('H:i:s')
				);

				$this->module->public_insert('student_assessment_payment',$payment_details);
			}	

			$this->module->update('student_assessment_detail', array('sad_for_payment' => 'N'), array('sa_id' => $sa_id));
			$this->module->update('student_enrollment', array('se_date_enrolled' => date('Y-m-d H:i:s'), 'se_status' => 'Enrolled' ), array('stud_id' => $stud_id, 'sy_id' => $sy_id));


			/*CHECK CLASSLIST*/

			/*$check_student 		= $this->module->table_where('v_student_enrollment_assessment', array('sy_id' => $sy_id, 'stud_id' => $stud_id));
			if($check_student->row() > 0){
				foreach($check_student->result() as $r){
					$sa_id = $r->sa_id;
				}
			}*/
		
		}
	}

	public function reservation_list(){
		$data['title']		= "Reservation List";
		$sy_id 				= $this->module->get_active_sy();
		$data['sections']	= $this->module->get_query("SELECT * FROM v_section WHERE sy_id = ".$sy_id." ORDER BY sec_sort ASC"); 
		$this->load->view('assessment/reservation_list', $data);
	}

	public function get_reservation_list(){
		$sec_id = $this->uri->segment(3);
		$data['reservation'] = $this->module->get_query("SELECT * FROM v_reservation WHERE sec_id =".$sec_id." ORDER BY res_date ASC");
		$this->load->view('assessment/tbl_reservation_list', $data);
	}


	public function update_sec(){

		$get_assessment = $this->module->get_table('student_assessment');

		foreach($get_assessment->result() as $r){
			$stud_id 	= $r->stud_id;
			$sec_id 	= $r->sec_id; 

			$this->module->update('student_enrollment', array('sec_id' => $sec_id), array('stud_id' => $stud_id) );

		}

	}


	public function update_enrollment(){
		$enrollment 	= $this->module->get_query("SELECT * FROM student_enrollment WHERE sec_id IS NULL AND sy_id = 2");
		$get_assessment = $this->module->get_query("SELECT * FROM student_assessment WHERE  sy_id = 2 ");

		foreach($enrollment->result() as $r){
			$rsec_id 	= $r->sec_id;
			$rstud_id	= $r->stud_id; 

			foreach($get_assessment->result() as $s){
				$ssec_id 	= $s->sec_id;
				$sstud_id	= $s->stud_id; 

				if($sstud_id == $rstud_id){
					$this->module->update('student_enrollment', array('sec_id' => $ssec_id), array('stud_id' => $rstud_id) );
				}


			}
		}
	}

	public function generate_assessment_payment(){

		$get_assessment = $this->module->get_table('student_assessment_detail');

		foreach($get_assessment->result() as $r){
			$sa_id 						= $r->sa_id;
			$sad_tuition_fee 			= $r->sad_tuition_fee - $r->sad_reservation_amount;
			$sad_miscellaneous_fee 		= $r->sad_miscellaneous_fee;
			$sad_total_other_fees 		= $r->sad_total_other_fees;
			$sa_id 						= $r->sa_id;
			$sap_total_payment 			= ($sad_tuition_fee + $sad_miscellaneous_fee) - $sad_total_other_fees;
			


		}
	}



}