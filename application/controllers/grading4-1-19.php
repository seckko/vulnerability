<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Grading extends CI_Controller {

	public function __construct(){
		parent::__construct();

	}

	public function index(){
		$data['title'] 	= "Dashboard";
		$tch_id 		= $this->session->userdata('tch_id');

		if(empty($tch_id)){
			header('Location: '.base_url());
		}else{
			$sy_id 			= $this->module->get_active_sy();	
			$data['load']	= $this->module->get_query("SELECT * FROM v_subject_teacher_assignment WHERE tch_id = ".$tch_id." AND sy_id =".$sy_id."  GROUP BY sub_id");
			$this->load->view('grading/dashboard',$data);
		}
		
		
	}
	
	public function create_grading()
	{
		if(!$this->input->is_ajax_request())
			{
				$data['title'] 	=	"Grading System";
				$this->load->view('grading/create_grade',$data);
			}
		else
			{
				
			}
	}


	public function add_score(){

		  $usr_type       = $this->session->userdata('usr_type');
		  $tch_id         = $this->session->userdata('tch_id');
		  $landing        = $this->session->userdata('landing');


		  if(($usr_type <> 'Faculty') || empty($tch_id) ){
		    header('Location: '.base_url().$landing);
		    
		  }else{

		  		if(!$this->input->is_ajax_request())
					{
						$subj_id 						= $this->uri->segment(3);
						$tch_id     					= $this->session->userdata('tch_id');
						$sy_id 							= $this->module->get_active_sy();
						$data['title'] 					= "Add Score";
						$data['subj_id'] 				= $subj_id;
						$data['subj_assignment'] 		= $this->module->table_where('v_subject_teacher_assignment', array('subj_id' => $subj_id, 'tch_id' => $tch_id, 'sy_id' => $sy_id));
						$this->load->view('grading/add_score',$data);
					}
				else{


						$this->form_validation->set_rules('scr_quarter', 'Quarter', 'trim|required');
						$this->form_validation->set_rules('scr_type', 'Type', 'trim|required');
						$this->form_validation->set_rules('scr_total_score', 'Total Score', 'trim|required');

						if ($this->form_validation->run() == FALSE)
			                {
			                	$this->module->my_return(false, validation_errors());
			                }
			            else
			                {	
			                	$subj_id 			=	$this->input->post('subj_id', true);
			                	$scr_quarter 		=	$this->input->post('scr_quarter', true);
			                	$scr_type 			=	$this->input->post('scr_type', true);
			                	$scr_sub_type 		=	$this->input->post('scr_sub_type', true);
			                	$scr_item 			=	$this->input->post('scr_item', true);
			                	$scr_total_score 	=	$this->input->post('scr_total_score', true);


			                	$data = array(
			                		'subj_id' 			=> $subj_id,
			                		'scr_quarter' 		=> $scr_quarter,
			                		'scr_type' 			=> $scr_type,
			                		'scr_sub_type' 		=> $scr_sub_type,
			                		'scr_item' 			=> $scr_item,
			                		'scr_total_score' 	=> $scr_total_score
			                	);

			                	if($this->module->insert('student_score_hdr', $data)){

			                		$scr_id = $this->db->insert_id() ;


				                	//$student_data 	= array();
									$data 			= $this->input->post(null,true);

							        foreach($data as $d => $k){

										if(strpos($d, 'student')!== FALSE){

											$stud_id 		= empty($k["stud_id"])		?'': $k["stud_id"];
											$sscr_score 	= empty($k["sscr_score"])	?'': $k["sscr_score"];
											$sscr_absent 	= empty($k["sscr_absent"])	?'': $k["sscr_absent"];
											

											if(!empty($stud_id))
												{
													$student_score = array(
														"stud_id" 		=> $stud_id,
														"scr_id" 		=> $scr_id,
														"sscr_score" 	=> intval($sscr_score),
														"sscr_absent" 	=> $sscr_absent
													);
													//array_push($student_data, $student_score); 
													$this->module->insert('student_score', $student_score);
												}

											
										}// if student

									}

									$this->module->my_return(true, 'Score recorded successfully');

									//$this->module->batch_insert('student_score', $student_data);

			                	}else
				                	{
				                		$this->module->my_return(false, 'Please check all required fields');
				                	}
			                }		
				}

		  }
	}

	public function edit_score(){
		$usr_type       = $this->session->userdata('usr_type');
		$tch_id         = $this->session->userdata('tch_id');
		$landing        = $this->session->userdata('landing');

		if(($usr_type <> 'Faculty') || empty($tch_id) ){
		    header('Location: '.base_url().$landing); 
		}else{
				if(!$this->input->is_ajax_request())
					{
						$subj_id 						=	$this->uri->segment(3);
						$scr_id 						=	$this->uri->segment(4);
						$data['scr_id']					= 	$scr_id;
						$data['subj_id']				= 	$subj_id ;
						$data['title'] 					=	"Edit Score";
						$data['subj_assignment'] 		= $this->module->table_where('v_subject_teacher_assignment', array('subj_id' => $subj_id ));
						$data['score_hdr'] 				= $this->module->table_where('student_score_hdr', array('scr_id' => $scr_id ));
						$this->load->view('grading/edit_score',$data);
					}
				else{


						$this->form_validation->set_rules('scr_quarter', 'Quarter', 'trim|required');
						$this->form_validation->set_rules('scr_type', 'Type', 'trim|required');
						$this->form_validation->set_rules('scr_total_score', 'Total Score', 'trim|required');

						if ($this->form_validation->run() == FALSE)
			                {
			                	$this->module->my_return(false, validation_errors());
			                }
			            else
			                {	
			                	$scr_id 			=	$this->input->post('scr_id', true);
			                	//$sscr_id 			=	$this->input->post('sscr_id', true);
			                	$subj_id 			=	$this->input->post('subj_id', true);
			                	$scr_quarter 		=	$this->input->post('scr_quarter', true);
			                	$scr_type 			=	$this->input->post('scr_type', true);
			                	$scr_sub_type 		=	$this->input->post('scr_sub_type', true);
			                	$scr_item 			=	$this->input->post('scr_item', true);
			                	$scr_total_score 	=	$this->input->post('scr_total_score', true);


			                	$data = array(
			                		'scr_item' 			=> $scr_item,
			                		'scr_total_score' 	=> $scr_total_score
			                	);


				                	if($this->module->update('student_score_hdr', $data, array('scr_id' => $scr_id) ))
				                		{

					                	$student_data 	= array();
										$data 			= $this->input->post(null,true);

								        foreach($data as $d => $k){

											if(strpos($d, 'student')!== FALSE){

												$stud_id 		= empty($k["stud_id"])?'': $k["stud_id"];
												$stud_id 		= empty($k["stud_id"])?'': $k["stud_id"];
												$sscr_id 		= empty($k["sscr_id"])?'': $k["sscr_id"];
												$sscr_score 	= empty($k["sscr_score"])?'': $k["sscr_score"];
												$sscr_absent 	= empty($k["sscr_absent"])	?'': $k["sscr_absent"];
												

												if(!empty($stud_id))
													{
													
														$student_score_insert = array(
															"sscr_id" 		=> $sscr_id,
															"stud_id" 		=> $stud_id,
															"scr_id" 		=> $scr_id,
															"sscr_score" 	=> intval($sscr_score),
															"sscr_absent" 	=> $sscr_absent
														);

														$student_score_update = array(
															"sscr_score" 	=> intval($sscr_score),
															"sscr_absent" 	=> $sscr_absent
														);

														if(empty($sscr_id) || $sscr_id == 0 ){
															$this->module->insert('student_score', $student_score_insert);
														}else{
															$this->module->update('student_score', $student_score_update, array('sscr_id' => $sscr_id) );
														}


														//array_push($student_data, $student_score);
													}

												
											}// if student

										}

										$this->module->my_return(true, 'Records successfully updated');

										//print_r($student_data);

										//$this->module->batch_update('student_score', $student_data, 'sscr_id' );

				                		}
				                	else
					                	{
					                		$this->module->my_return(false, 'Please check all required fields');
					                	}
					           // }//end check
			                }
						
				}
		}

	}

	public function delete_score(){
		$scr_id = $this->uri->segment(3);

		if($this->module->delete('student_score_hdr', array('scr_id' => $scr_id)))
		{
			$this->module->delete('student_score', array('scr_id' => $scr_id));
			return true;
		}
	}

	public function class_record(){
		$usr_type       = $this->session->userdata('usr_type');
		$tch_id         = $this->session->userdata('tch_id');
		$landing        = $this->session->userdata('landing');

		if(($usr_type <> 'Faculty') || empty($tch_id) ){
		    header('Location: '.base_url().$landing); 
		}else{
			$data['title'] 					= "Class Record";
			$subj_id  						= $this->uri->segment(3);
			$tch_id     					= $this->session->userdata('tch_id');
			$sy_id 							= $this->module->get_active_sy();
			$data['subj_id'] 				= $subj_id;
			$data['subj_assignment'] 		= $this->module->table_where('v_subject_teacher_assignment', array('subj_id' => $subj_id, 'tch_id' => $tch_id, 'sy_id' => $sy_id));
			//$data['subj'] 					= $this->module->table_where('v_subject_teacher_assignment', array('subj_id' => $subj_id, 'tch_id' => $tch_id, 'sy_id' => $sy_id));
			$this->load->view('grading/class_record',$data);
		}
	}

	public function print_class_record(){
		$usr_type       = $this->session->userdata('usr_type');
		$tch_id         = $this->session->userdata('tch_id');
		$landing        = $this->session->userdata('landing');

		if(($usr_type <> 'Faculty') || empty($tch_id) ){
		    header('Location: '.base_url().$landing); 
		}else{
			$data['title'] 					= "Class Record";
			$subj_id  						= $this->uri->segment(3);
			$tch_id     					= $this->session->userdata('tch_id');
			$data['quarter_code'] 			= $this->uri->segment(4);
			$sy_id 							= $this->module->get_active_sy();
			$data['subj_id'] 				= $subj_id;
			$data['subj_assignment'] 		= $this->module->table_where('v_subject_teacher_assignment', array('subj_id' => $subj_id, 'tch_id' => $tch_id, 'sy_id' => $sy_id));
			$this->load->view('grading/print_class_record',$data);
		}
	}


	public function excel_class_record(){
		$usr_type       = $this->session->userdata('usr_type');
		$tch_id         = $this->session->userdata('tch_id');
		$landing        = $this->session->userdata('landing');

		if(($usr_type <> 'Faculty') || empty($tch_id) ){
		    header('Location: '.base_url().$landing); 
		}else{
			$data['title'] 					= "Class Record";
			$subj_id  						= $this->uri->segment(3);
			$data['quarter_code'] 			= $this->uri->segment(4);
			$tch_id     					= $this->session->userdata('tch_id');
			$sy_id 							= $this->module->get_active_sy();
			$data['subj_id'] 				= $subj_id;
			$data['subj_assignment'] 		= $this->module->table_where('v_subject_teacher_assignment', array('subj_id' => $subj_id, 'tch_id' => $tch_id, 'sy_id' => $sy_id));
			$this->load->view('grading/excel_class_record',$data);
		}
	}

	public function final_rating(){
		$data['title'] 					= "Final Rating";
		$tch_id     					= $this->session->userdata('tch_id');
		$sy_id 							= $this->module->get_active_sy();
		$data['subj_assignment'] 		= $this->module->table_where('v_subject_teacher_assignment', array('tch_id' => $tch_id, 'sy_id' => $sy_id));
		$this->load->view('grading/final_rating',$data);
	}





	/*public function class_record2(){
		$data['title'] 					= "Class Record";
		$subj_id  						= $this->uri->segment(3);
		$tch_id     					= $this->session->userdata('tch_id');
		$sy_id 							= $this->module->get_active_sy();
		$data['subj_id'] 				= $subj_id;
		$data['subj_assignment'] 		= $this->module->table_where('v_subject_teacher_assignment', array('subj_id' => $subj_id, 'tch_id' => $tch_id, 'sy_id' => $sy_id));
		$this->load->view('grading/class_record_final_new',$data);
	}*/




	/*public function print_report_card(){
		$data['title'] 	= "Report Card";
		$usr_type       = $this->session->userdata('usr_type');
		$tch_id         = $this->session->userdata('tch_id');
		$landing        = $this->session->userdata('landing');

		$data['title']	= 'Report Card';
		$sec_id 		= $this->uri->segment(3);
		$data['section']= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$sy_id 			= $this->module->get_active_sy();
		$quarter 		= $this->module->table_where('quarter', array('qtr_active' => 'Y'))->row('qtr_code');
		$data['attendance'] = $this->module->get_table('attendance_hdr');
		//
		
		$q1 = '';
		$q2 = '';
		$q3 = '';
		$q4 = '';

		$quarters		= $this->module->get_table('quarter');
			
		$data['sec_id']	= $sec_id;

		$data['boys'] 		= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 

		$student_score_data = array();
		$title 				= array();

		$grade_data = array();
		
		$subject 		= $this->module->get_query("SELECT * FROM subject ORDER BY sub_sort ASC");
		foreach($subject->result() as $s){
			$sub_id 	= $s->sub_id;
			$sub_name 	= $s->sub_name;
			$subj 		= $this->module->table_where('subject_assignment', array('sec_id' => $sec_id, 'sub_id' => $sub_id)); 
			$subj_det_name 	= '';

			$grade 				= array();
			$title_subj_det_name= array(); 

			if($subj->num_rows() > 0 ){
				foreach ($subj->result() as $l) {
					$subj_det_id 	= $l->subj_det_id;
					$subj_id 		= $l->subj_id;
					$get_name		= $this->module->table_where('subject_detail', array('subj_det_id' => $subj_det_id));
					

					if($get_name->num_rows() > 0){
						foreach($get_name->result() as $de){
							$subj_det_name = $de->subj_det_name;
							array_push($title_subj_det_name, array('subj_det_id' => $subj_det_id, 'subj_det_name' => $subj_det_name));
						}							
					}

					$q1 = $this->module->subject_grade($sub_id, $quarter='1Q', $subj_id , $sec_id, $sy_id, $subj_det_id);
					$q2 = $this->module->subject_grade($sub_id, $quarter='2Q', $subj_id , $sec_id, $sy_id, $subj_det_id);
					$q3 = $this->module->subject_grade($sub_id, $quarter='3Q', $subj_id , $sec_id, $sy_id, $subj_det_id);

					array_push($grade, array('subj_det_id' => $subj_det_id, 'subj_det_name' => $subj_det_name,  'grade' => $q1, 'q2' => $q2, 'q3' => $q3));
				}
			}


			array_push($title, array('sub_id' => $sub_id, 'sub_name' => $sub_name,  'subj_det_name' => $title_subj_det_name ));
			array_push($student_score_data, array('sub_id' => $sub_id, 'sub_name' => $sub_name, 'grade_data' => $grade));
			
		}

		
		$data['thead']		= $title;
		$data['grades'] 	= $student_score_data;

		//echo '<pre>';
		//print_r( $student_score_data);

		$this->load->view('grading/report_card',$data);
	}*/

	public function attendance(){
		$data['title'] 		= 'Attendance';

		$sy_id 				= $this->module->get_active_sy();
		$sec_id 			= $this->uri->segment(3);
		$data['student'] 	=  $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  AND sy_id = ".$sy_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC ");
		
		$data['attendance_hdr']		= $this->module->get_query("SELECT * FROM attendance_hdr ORDER BY athdr_sort ASC");
		$data['attendance_detail'] 	= $this->module->table_where('v_attendance' , array('sec_id' => $sec_id, 'sy_id' => $sy_id) );

		$this->load->view('grading/attendance',$data);
		
	}

	public function add_attendance(){
		if(!$this->input->is_ajax_request())
			{
				$data['title'] 		= 'Attendance';

				$sy_id 				= $this->module->get_active_sy();
				$sec_id 			= $this->uri->segment(3);
				$data['student'] 	=  $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  AND sy_id = ".$sy_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC ");
				
				$data['attendance_hdr']		= $this->module->get_query("SELECT * FROM attendance_hdr ORDER BY athdr_sort ASC");
				$data['attendance_detail'] 	= $this->module->table_where('v_attendance' , array('sec_id' => $sec_id, 'sy_id' => $sy_id) );

				$this->load->view('grading/add_attendance',$data);
			}
		else
			{

				$this->form_validation->set_rules('athdr_month', 'Month', 'trim|required');

				if ($this->form_validation->run() == FALSE)
	                {
	                	$this->module->my_return(false, validation_errors());
	                }
	            else
	                {	
	                	$sy_id 				= 	$this->module->get_active_sy();
	                	$athdr_id 			=	$this->input->post('athdr_id', true);
	                	$athdr_month 		=	$this->input->post('athdr_month', true);
	                	$athdr_total_days 	=	$this->input->post('athdr_total_days', true);
	                	$sec_id 			=	$this->input->post('sec_id', true);

	                	$check = $this->module->table_where('attendance_detail', array('sy_id' => $sy_id, 'sec_id' => $sec_id, 'athdr_id' => $athdr_id ));

	                	if($check->num_rows() > 0) {
	                		$this->module->delete('attendance_detail', array('sy_id' => $sy_id, 'sec_id' => $sec_id, 'athdr_id' => $athdr_id ) );
	                	}

	                	$data 	= $this->input->post(null,true);
				        foreach($data as $d => $k){

							if(strpos($d, 'attendance')!== FALSE){
								$stud_id 		= empty($k["stud_id"])?'': $k["stud_id"]; 
								$att_present 	= empty($k["att_present"])?'': $k["att_present"];

								if( !empty($stud_id) ){
									$attendance  = array(
										'sy_id' 		=> 	$sy_id,
										'sec_id' 		=> 	$sec_id,
										'stud_id' 		=> 	$stud_id,
										'athdr_id' 		=> 	$athdr_id,
										'att_month' 	=> 	$athdr_month,
										'att_present'	=>	$att_present,
										'att_absent'	=>	($athdr_total_days - $att_present)
									);

									$this->module->insert('attendance_detail', $attendance);
								}

							}//end day_out
						}

						$this->module->my_return(true, 'Successfully save record');

	                }
			
			}
	}

	public function get_attendance(){
		$athdr_id 	= $this->uri->segment(3);
		$sec_id 	= $this->uri->segment(4);
		$sy_id 		= $this->module->get_active_sy();

		$data['student'] 	=  $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  AND sy_id = ".$sy_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC ");
		$data['attendance'] = $this->module->table_where('attendance_detail', array('sy_id' => $sy_id, 'sec_id' => $sec_id, 'athdr_id' => $athdr_id ));
		
		$this->load->view('grading/tbl_attendance', $data);


	}

	public function get_item(){

		$quarter 	= $this->uri->segment(3);
		$type 		= $this->uri->segment(4);
		$subj_id  	= $this->uri->segment(5);

		$query_cnt 	= $this->module->get_query(" SELECT COUNT(*) AS cnt FROM v_subject_score WHERE scr_quarter = '".$quarter."' AND scr_type = '".$type."' AND subj_id ='".$subj_id."' ")->row('cnt');

		if($type == 'QA'){
			if($query_cnt > 4){
				$this->module->my_return(false, 'Maximum Quater items reach.');
			}else{
				$this->module->my_return(true, $query_cnt+1);
			}

		}else{
			$this->module->my_return(true, $query_cnt +1);
		}

		//echo $query+1;
	}

	public function get_counter(){
		$data['subj_id'] = $this->uri->segment(3);
		$this->load->view('grading/counter',$data);
	}

	public function update_account(){
		if(!$this->input->is_ajax_request())
			{	
				$usr_id 			= (empty($this->uri->segment(3)) ? $this->session->userdata('usr_id') : $this->uri->segment(3) );
				$data['title']		= "Update Account";
				$data['user'] 		= $this->module->get_query("SELECT * FROM user WHERE usr_id = ".$usr_id." ");
				$this->load->view('grading/update_account', $data);
			}
		else
		{
			$this->form_validation->set_rules('usr_id', 'User ID', 'trim|required');
			$this->form_validation->set_rules('usr_name', 'Username', 'trim|required');
			$this->form_validation->set_rules('usr_firstname', 'First Name', 'trim|required');
			$this->form_validation->set_rules('usr_lastname', 'Last Name', 'trim|required');
			$this->form_validation->set_rules('usr_password', 'Password', 'trim|required');

			if ($this->form_validation->run() == FALSE)
                {
                	$this->module->my_return(false, validation_errors());
                }
            else
                {	
                	$usr_id 		=	$this->input->post('usr_id', true);
                	$usr_name 		=	$this->input->post('usr_name', true);
                	$usr_password 	=	$this->input->post('usr_password', true);
                	$usr_firstname	= 	$this->input->post('usr_firstname', true);
                	$usr_lastname	= 	$this->input->post('usr_lastname', true);

                	$data = array(	'usr_name' 			=> $usr_name, 
                					'usr_firstname' 	=> $usr_firstname,
                					'usr_lastname' 		=> $usr_lastname,
                					'usr_password'		=> $usr_password
                	);

                	$this->module->public_update('user', $data, array('usr_id' => $usr_id));
                }

		}
	}

	public function advisory_class(){
		$data['title']	= 'Advisory Class';
		$sec_id 		= $this->uri->segment(3);
		$sy_id 			= $this->module->get_active_sy();
		$data['sec_id']	= $sec_id;
		$qtr 			= $this->uri->segment(4);


		$section 			= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['section']	= $section;
		$subject			= $this->module->getTableSort('subject', 'sub_sort');
		$data['subject']	= $subject;

		$student_data 		= array();
		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		$quarter  			= $this->module->get_table('quarter');
		$data['quarters']	= $quarter;
		$qgrade 			= $this->module->table_where('v_quarterly_grade', array('sec_id' => $sec_id, 'sy_id' => $sy_id, 'qtr_code' => $qtr));


		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name 			= '<strong>'.$stud_lastname.'</strong>, '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

				$disq_grade 		= array();
				$subject_array 		= array();
				
				$total 				= 0;
				$average  			= 0;
				$total_cnt 			= 0;
				

				foreach($subject->result() as $sj){
					$sub_name   = $sj->sub_name;
		            $sub_id     = $sj->sub_id; 
		            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

		            $check_subject 	= $this->module->table_where('subject_assignment', array('sub_id' => $sub_id, 'sec_id' => $sec_id));
		            if($check_subject->num_rows() > 0){

		            	$cnt 			= 0;
		            	$total_grade 	= 0;
		            	$quarterly_grade_array = array();	   	

		            	foreach($qgrade->result() as $qg){
							$qgh_id 			= $qg->qgh_id;
							$qgh_sub_id 		= $qg->sub_id;
							$qgh_subj_det_id 	= $qg->subj_det_id;
							$qgh_stud_id 		= $qg->stud_id;
							$qgh_grade 			= $qg->quarterly_grade;

							if( ($qgh_sub_id == $sub_id)   && ($stud_id == $qgh_stud_id)){
								$cnt ++;
								$total_grade += $qgh_grade;
								array_push($quarterly_grade_array, array('sub_id' => $qgh_sub_id, 'subj_det_id' => $qg->subj_det_id ,'grade' => $qgh_grade ));

							}

						}

						$total = round( $total_grade / ($cnt == 0 ? $cnt = 1 : $cnt = $cnt));

				       	array_push($subject_array, 
			            	array(
			            		'sub_id' 			=> $sub_id,
			            		'sub_name' 			=> $sub_name,
			            		'total_grade'		=> $total,
			            		'subject_details'	=> $quarterly_grade_array

			            	)
			       		);

			       		$average += $total; 
		            	$total_cnt  ++;
		            }

		          
		           
		             
		        }

			array_push($student_data, 
            	array(
            		'stud_id' 		=> $stud_id,
            		'stud_name' 	=> $stud_name,
            		'average' 		=> round(($average / ($total_cnt)),2),
            		'subjects'		=> $subject_array
            	)
            );

		}


		function rank($a, $b)
		  {
		    return strnatcmp($b['average'], $a['average']);
		  }

		  // sort alphabetically by name
		  uasort($student_data, 'rank');

		$data['student_data'] = $student_data;
		
		$this->load->view('grading/advisory_class', $data);
	}
	

	public function advisory_class_bagong_funtion(){

		$data['title']	= 'Advisory Class';
		$sec_id 		= $this->uri->segment(3);
		$sy_id 			= $this->module->get_active_sy();
		$data['sec_id']	= $sec_id;
		$quarter 				= $this->uri->segment(4);

		$section 			= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['section']	= $section;
		$component 			= $this->module->get_query("SELECT * FROM v_component WHERE sec_id = ".$sec_id." AND sy_id = ".$sy_id." ");
		$subject			= $this->module->getTableSort('subject', 'sub_sort');
		$grade_trans 		= $this->module->get_table("grade_transmutation");
		$student_score 		= $this->module->get_query("SELECT sec_id,sy_id,subj_id,sub_id,subj_det_id,stud_id,scr_quarter,scr_type,SUM(sscr_score) AS `score`,SUM(scr_total_score) AS `total_score`,ROUND(((SUM(sscr_score) * 100) / SUM(scr_total_score)),3) AS `average` FROM `v_student_score` WHERE   sec_id = ".$sec_id." AND sy_id = ".$sy_id." AND scr_quarter = '".$quarter."' GROUP BY scr_type,stud_id,scr_quarter,subj_id ");
		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		
		$student_data 		= array();
		
		$quarterly_grade   	= 0;

		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name = $stud_lastname.', '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

			$subject_array 		= array();
			$ws_pt_qa 			= array();

			foreach($subject->result() as $sj){
				$sub_name   = $sj->sub_name;
	            $sub_id     = $sj->sub_id; 

	            $subject_det    = $this->module->get_query('SELECT COUNT(*) as cnt FROM subject_detail WHERE sub_id = '.$sub_id.' ')->row('cnt');
	            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

	            foreach($component->result() as $t){
	                $ca_ww          = $t->ca_ww_percentage;
	                $ca_pt          = $t->ca_pt_percentage;
	                $ca_qa          = $t->ca_qa_percentage;

	                $tsub_id        = $t->sub_id;
	                $tsubj_det_id   = $t->subj_det_id;
	                $tsubj_id       = $t->subj_id;

	                $wwscore        	= 0;
                    $ptscore        	= 0;
                    $qascore        	= 0;
                    $quarterly_grade   	= 0;

	                //get the component value of the subject
	                if( ($sub_id == $tsub_id) ){

	                    foreach($student_score->result() as $s){
	                        $sstud_id       = $s->stud_id;
	                        $stype          = $s->scr_type;
	                        $ssubj_id       = $s->subj_id;
	                        $ssub_id        = $s->sub_id;
	                        $ssubj_det_id   = $s->subj_det_id;
	                        $saverage       = $s->average;


	                        //compute the grade
	                        
	                        if( ($stud_id == $sstud_id) && ($ssubj_id == $tsubj_id) ){

		                        if($stype == 'WW'){ 
	                                $ww     = $saverage * ($ca_ww / 100);
	                                $wwscore = round($ww,3);
	                            }else if($stype == 'PT'){
	                                $pt     = $saverage * ($ca_pt / 100);
	                                $ptscore = round($pt,3);
	                            }else if($stype == 'QA'){
	                                $qa     = $saverage * ($ca_qa / 100);
	                                $qascore = round($qa,3);
	                            }

	                            //array_push($ws_pt_qa, array('ww' => $wwscore, 'pt' => $ptscore, 'qa' => $qascore)  );

	                            $initial_grade = $wwscore + $ptscore + $qascore; 

	                            foreach($grade_trans->result() as $g){
	                                $gt_min     = $g->gt_min;
	                                $gt_max     = $g->gt_max;
	                                $gt_grade   = $g->gt_grade;

	                                if( ($initial_grade >= $gt_min) && ($initial_grade <= $gt_max) ){
	                                    $quarterly_grade = $gt_grade;
	                                }
	                            }

	                        }

	                    }


	                    array_push($subject_array, 
			            	array(
			            		'sub_id' 			=> $sub_id,
			            		'subj_id'			=> $tsubj_id,
			            		'sub_name' 			=> $sub_name,
			            		'subj_det_id'		=> $tsubj_det_id,
			            		'grade' 			=> $quarterly_grade 

			            	)
			       		); 

	                    
	                }

	            }
	                                         
			} 



			array_push($student_data, 
            	array(
            		'stud_id' 	=> $stud_id,
            		'stud_name' => $stud_name,
            		'subjects'	=> $subject_array
            	)
            );

		}
		
		$data['student_data'] = $student_data;
		$this->load->view('grading/advisory_class', $data);
	}

	public function rating_sheet(){
		$data['title'] 	= 'Rating Sheet';
		$sy_id 			= $this->module->get_active_sy();
		$sec_id 		= $this->uri->segment(3);
		//$sub_id 		= $this->uri->segment(4);

		$data['sec_id']	= $sec_id;
		$section 			= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['section']	= $section;
		$subject			= $this->module->getTableSort('subject', 'sub_sort');

		$student_data 		= array();
		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		$quarter  			= $this->module->get_table('quarter');
		$data['quarters']	= $quarter;
		$qgrade 			= $this->module->table_where('v_quarterly_grade', array('sec_id' => $sec_id, 'sy_id' => $sy_id));

		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name 			= '<strong>'.$stud_lastname.'</strong>, '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

			
				$subject_array 		= array();

				foreach($subject->result() as $sj){
					$sub_name   = $sj->sub_name;
		            $sub_id     = $sj->sub_id; 

		            $subject_det    = $this->module->get_query('SELECT COUNT(*) as cnt FROM subject_detail WHERE sub_id = '.$sub_id.' ')->row('cnt');
		            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

		            $check_subject 	= $this->module->table_where('subject_assignment', array('sub_id' => $sub_id, 'sec_id' => $sec_id));
		            if($check_subject->num_rows() > 0){

		            	

		            	$quarter_array = array();
		            	foreach($quarter->result() as $q){
							$qtr_code 			= $q->qtr_code;

							$quarterly_grade_array = array();

							$cnt = 0;
		            		$total_grade = 0;
							foreach($qgrade->result() as $qg){
								$qgh_id 			= $qg->qgh_id;
								$qgh_sub_id 		= $qg->sub_id;
								$qgh_subj_det_id 	= $qg->subj_det_id;
								$qgh_qtr_code 		= $qg->qtr_code;
								$qgh_stud_id 		= $qg->stud_id;
								$qgh_grade 			= $qg->quarterly_grade;

								if( ($qgh_qtr_code == $qtr_code) && ($qgh_sub_id == $sub_id)   && ($stud_id == $qgh_stud_id)){
									$cnt ++;
									$total_grade += $qgh_grade;

									array_push($quarterly_grade_array, array('sub_id' => $qgh_sub_id, 'subj_det_id' => $qg->subj_det_id ,'grade' => $qgh_grade  ));
									
								}


							}

							$total = round( $total_grade / ($cnt == 0 ? $cnt = 1 : $cnt = $cnt));
							array_push($quarter_array, array('qtr_code' => $qtr_code, 'final_grade' => $total, 'quarterly_grade' => $quarterly_grade_array) );

				       	}

				       	array_push($subject_array, 
			            	array(
			            		'sub_id' 			=> $sub_id,
			            		'sub_name' 			=> $sub_name,
			            		'quarter'			=> $quarter_array

			            	)
			       		);
		            }
		             
		        }

			array_push($student_data, 
            	array(
            		'stud_id' 	=> $stud_id,
            		'stud_name' => $stud_name,
            		'subjects'	=> $subject_array
            	)
            );


		}

		/*echo '<pre>';
		print_r($student_data);*/

		$data['student_data'] = $student_data;
		$this->load->view('grading/rating_sheet', $data);

		/*$data['section']	= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$component 			= $this->module->get_query("SELECT * FROM v_component WHERE sec_id = ".$sec_id." AND sy_id = ".$sy_id." ");
		$data['subject']	= $this->module->table_where('subject', array('sub_id' => $sub_id));
		$subject 			= $this->module->get_table('subject');
		$grade_trans 		= $this->module->get_table("grade_transmutation");
		$student_score 		= $this->module->get_query("SELECT sec_id,sy_id,subj_id,sub_id,subj_det_id,stud_id,scr_quarter,scr_type,SUM(sscr_score) AS `score`,SUM(scr_total_score) AS `total_score`,ROUND(((SUM(sscr_score) * 100) / SUM(scr_total_score)),3) AS `average` FROM `v_student_score` WHERE   sec_id = ".$sec_id." AND sy_id = ".$sy_id." GROUP BY scr_type,stud_id,scr_quarter,subj_id ");

		//echo $this->db->last_query();

		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		$student_data 		= array();
		$quarterly_grade   	= 0;

		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name 			= $stud_lastname.', '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

			$tbl_quarter 		= $this->module->get_table('quarter');
			$qtr_array 			= array();

				foreach($tbl_quarter->result() as $q){
					$qtr_code 		= $q->qtr_code;
					$subject_array 	= array();

					foreach($subject->result() as $sj){
						$sub_name   = $sj->sub_name;
			            $sub_id     = $sj->sub_id; 

			            $subject_det    = $this->module->get_query('SELECT COUNT(*) as cnt FROM subject_detail WHERE sub_id = '.$sub_id.' ')->row('cnt');
			            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

			            foreach($component->result() as $t){
			                $ca_ww          = $t->ca_ww_percentage;
			                $ca_pt          = $t->ca_pt_percentage;
			                $ca_qa          = $t->ca_qa_percentage;

			                $tsub_id        = $t->sub_id;
			                $tsubj_det_id   = $t->subj_det_id;
			                $tsubj_id       = $t->subj_id;

			                $wwscore        	= 0;
		                    $ptscore        	= 0;
		                    $qascore        	= 0;
		                    $quarterly_grade   	= 0;

		                    //get the component value of the subject
			                if( ($sub_id == $tsub_id) ){

			                	//if($qtr == $qtr_code){

				                    foreach($student_score->result() as $s){
				                        $sstud_id       = $s->stud_id;
				                        $stype          = $s->scr_type;
				                        $ssubj_id       = $s->subj_id;
				                        $ssub_id        = $s->sub_id;
				                        $ssubj_det_id   = $s->subj_det_id;
				                        $saverage       = $s->average;
				                        $qtr 			= $s->scr_quarter;

				                        if($qtr == $qtr_code){
					                        //compute the grade
					                        if( ($stud_id == $sstud_id) && ($ssubj_id == $tsubj_id) ){

						                        if($stype == 'WW'){ 
					                                $ww     = $saverage * ($ca_ww / 100);
					                                $wwscore = round($ww,3);
					                            }else if($stype == 'PT'){
					                                $pt     = $saverage * ($ca_pt / 100);
					                                $ptscore = round($pt,3);
					                            }else if($stype == 'QA'){
					                                $qa     = $saverage * ($ca_qa / 100);
					                                $qascore = round($qa,3);
					                            }

					                            //array_push($ws_pt_qa, array('ww' => $wwscore, 'pt' => $ptscore, 'qa' => $qascore)  );

					                            $initial_grade = $wwscore + $ptscore + $qascore; 

					                            foreach($grade_trans->result() as $g){
					                                $gt_min     = $g->gt_min;
					                                $gt_max     = $g->gt_max;
					                                $gt_grade   = $g->gt_grade;

					                                if( ($initial_grade >= $gt_min) && ($initial_grade <= $gt_max) ){
					                                    $quarterly_grade = $gt_grade;
					                                }
					                            }

					                        }

				                    	}

				                    }


				                    array_push($subject_array, 
						            	array(
						            		'sub_id' 			=> $sub_id,
						            		'subj_id'			=> $tsubj_id,
						            		'sub_name' 			=> $sub_name,
						            		'subj_det_id'		=> $tsubj_det_id,
						            		'grade' 			=> $quarterly_grade 

						            	)
						       		); 
						       	//}

			                    
			                }



			            }
			                                         
					} 

					array_push($qtr_array, array('qtr_code' => $q->qtr_code, 'subject_array' => $subject_array) ); 
				}
			

			array_push($student_data, 
            	array(
            		'stud_id' 	=> $stud_id,
            		'stud_name' => $stud_name,
            		'qtr'		=> $qtr_array
            	)
            );

		}
		
		$data['student_data'] = $student_data;


		echo '<pre>';
		print_r($student_data);*/

		//$this->load->view('grading/rating_sheet', $data);

	}

	public function print_rating_sheet(){
		$data['title'] 	= 'Rating Sheet';
		$sy_id 			= $this->module->get_active_sy();
		$sec_id 		= $this->uri->segment(3);
		//$sub_id 		= $this->uri->segment(4);

		$data['sec_id']	= $sec_id;
		$section 			= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['section']	= $section;
		$subject			= $this->module->getTableSort('subject', 'sub_sort');

		$student_data 		= array();
		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		$quarter  			= $this->module->get_table('quarter');
		$data['quarters']	= $quarter;
		$qgrade 			= $this->module->table_where('v_quarterly_grade', array('sec_id' => $sec_id, 'sy_id' => $sy_id));

		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name 			= '<strong>'.$stud_lastname.'</strong>, '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

			
				$subject_array 		= array();

				foreach($subject->result() as $sj){
					$sub_name   = $sj->sub_name;
		            $sub_id     = $sj->sub_id; 

		            $subject_det    = $this->module->get_query('SELECT COUNT(*) as cnt FROM subject_detail WHERE sub_id = '.$sub_id.' ')->row('cnt');
		            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

		            $check_subject 	= $this->module->table_where('subject_assignment', array('sub_id' => $sub_id, 'sec_id' => $sec_id));
		            if($check_subject->num_rows() > 0){

		            	

		            	$quarter_array = array();
		            	foreach($quarter->result() as $q){
							$qtr_code 			= $q->qtr_code;

							$quarterly_grade_array = array();

							$cnt = 0;
		            		$total_grade = 0;
							foreach($qgrade->result() as $qg){
								$qgh_id 			= $qg->qgh_id;
								$qgh_sub_id 		= $qg->sub_id;
								$qgh_subj_det_id 	= $qg->subj_det_id;
								$qgh_qtr_code 		= $qg->qtr_code;
								$qgh_stud_id 		= $qg->stud_id;
								$qgh_grade 			= $qg->quarterly_grade;

								if( ($qgh_qtr_code == $qtr_code) && ($qgh_sub_id == $sub_id)   && ($stud_id == $qgh_stud_id)){
									$cnt ++;
									$total_grade += $qgh_grade;

									array_push($quarterly_grade_array, array('sub_id' => $qgh_sub_id, 'subj_det_id' => $qg->subj_det_id ,'grade' => $qgh_grade  ));
									
								}


							}

							$total = round( $total_grade / ($cnt == 0 ? $cnt = 1 : $cnt = $cnt));
							array_push($quarter_array, array('qtr_code' => $qtr_code, 'final_grade' => $total, 'quarterly_grade' => $quarterly_grade_array) );

				       	}

				       	array_push($subject_array, 
			            	array(
			            		'sub_id' 			=> $sub_id,
			            		'sub_name' 			=> $sub_name,
			            		'quarter'			=> $quarter_array

			            	)
			       		);
		            }
		             
		        }

			array_push($student_data, 
            	array(
            		'stud_id' 	=> $stud_id,
            		'stud_name' => $stud_name,
            		'subjects'	=> $subject_array
            	)
            );


		}


		$data['student_data'] = $student_data;
		$this->load->view('grading/print_rating_sheet', $data);



	}

	public function excel_rating_sheet(){
		$data['title'] 	= 'Rating Sheet';
		$sy_id 			= $this->module->get_active_sy();
		$sec_id 		= $this->uri->segment(3);
		//$sub_id 		= $this->uri->segment(4);

		$data['sec_id']	= $sec_id;
		$section 			= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['section']	= $section;
		$subject			= $this->module->getTableSort('subject', 'sub_sort');

		$student_data 		= array();
		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		$quarter  			= $this->module->get_table('quarter');
		$data['quarters']	= $quarter;
		$qgrade 			= $this->module->table_where('v_quarterly_grade', array('sec_id' => $sec_id, 'sy_id' => $sy_id));

		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name 			= '<strong>'.$stud_lastname.'</strong>, '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

			
				$subject_array 		= array();

				foreach($subject->result() as $sj){
					$sub_name   = $sj->sub_name;
		            $sub_id     = $sj->sub_id; 

		            $subject_det    = $this->module->get_query('SELECT COUNT(*) as cnt FROM subject_detail WHERE sub_id = '.$sub_id.' ')->row('cnt');
		            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

		            $check_subject 	= $this->module->table_where('subject_assignment', array('sub_id' => $sub_id, 'sec_id' => $sec_id));
		            if($check_subject->num_rows() > 0){

		            	

		            	$quarter_array = array();
		            	foreach($quarter->result() as $q){
							$qtr_code 			= $q->qtr_code;

							$quarterly_grade_array = array();

							$cnt = 0;
		            		$total_grade = 0;
							foreach($qgrade->result() as $qg){
								$qgh_id 			= $qg->qgh_id;
								$qgh_sub_id 		= $qg->sub_id;
								$qgh_subj_det_id 	= $qg->subj_det_id;
								$qgh_qtr_code 		= $qg->qtr_code;
								$qgh_stud_id 		= $qg->stud_id;
								$qgh_grade 			= $qg->quarterly_grade;

								if( ($qgh_qtr_code == $qtr_code) && ($qgh_sub_id == $sub_id)   && ($stud_id == $qgh_stud_id)){
									$cnt ++;
									$total_grade += $qgh_grade;

									array_push($quarterly_grade_array, array('sub_id' => $qgh_sub_id, 'subj_det_id' => $qg->subj_det_id ,'grade' => $qgh_grade  ));
									
								}


							}

							$total = round( $total_grade / ($cnt == 0 ? $cnt = 1 : $cnt = $cnt));
							array_push($quarter_array, array('qtr_code' => $qtr_code, 'final_grade' => $total, 'quarterly_grade' => $quarterly_grade_array) );

				       	}

				       	array_push($subject_array, 
			            	array(
			            		'sub_id' 			=> $sub_id,
			            		'sub_name' 			=> $sub_name,
			            		'quarter'			=> $quarter_array

			            	)
			       		);
		            }
		             
		        }

			array_push($student_data, 
            	array(
            		'stud_id' 	=> $stud_id,
            		'stud_name' => $stud_name,
            		'subjects'	=> $subject_array
            	)
            );


		}


		$data['student_data'] = $student_data;
		$this->load->view('grading/excel_rating_sheet', $data);



	}

	public function subject_excellence(){

		$data['title'] 	= 'Subject Excellence';
		$sy_id 			= $this->module->get_active_sy();
		$sec_id 		= $this->uri->segment(3);
		$sub_id 		= $this->uri->segment(4);
		$data['sec_id']	= $sec_id;
		$data['sub_id'] = $sub_id;

		$section 			= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['section']	= $section;
		$subject			= $this->module->getTableSort('subject', 'sub_sort');

		$student_data 		= array();
		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		$quarter  			= $this->module->get_table('quarter');
		$data['quarters']	= $quarter;
		$qgrade 			= $this->module->table_where('v_quarterly_grade', array('sec_id' => $sec_id, 'sy_id' => $sy_id, 'sub_id' => $sub_id));



		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name 			= '<strong>'.$stud_lastname.'</strong>, '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

			
				$subject_array 		= array();

				foreach($subject->result() as $sj){
					$sub_name   = $sj->sub_name;
		            $sub_id     = $sj->sub_id; 

		            $subject_det    = $this->module->get_query('SELECT COUNT(*) as cnt FROM subject_detail WHERE sub_id = '.$sub_id.' ')->row('cnt');
		            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

		            $check_subject 	= $this->module->table_where('subject_assignment', array('sub_id' => $sub_id, 'sec_id' => $sec_id));
		            if($check_subject->num_rows() > 0){

		            	

		            	$quarter_array = array();
		            	foreach($quarter->result() as $q){
							$qtr_code 			= $q->qtr_code;

							$quarterly_grade_array = array();

							$cnt = 0;
		            		$total_grade = 0;
							foreach($qgrade->result() as $qg){
								$qgh_id 			= $qg->qgh_id;
								$qgh_sub_id 		= $qg->sub_id;
								$qgh_subj_det_id 	= $qg->subj_det_id;
								$qgh_qtr_code 		= $qg->qtr_code;
								$qgh_stud_id 		= $qg->stud_id;
								$qgh_grade 			= $qg->quarterly_grade;

								if( ($qgh_qtr_code == $qtr_code) && ($qgh_sub_id == $sub_id)   && ($stud_id == $qgh_stud_id)){
									$cnt ++;
									$total_grade += $qgh_grade;

									array_push($quarterly_grade_array, array('sub_id' => $qgh_sub_id, 'subj_det_id' => $qg->subj_det_id ,'grade' => $qgh_grade  ));
									
								}


							}

							$total = round( $total_grade / ($cnt == 0 ? $cnt = 1 : $cnt = $cnt));
							array_push($quarter_array, array('qtr_code' => $qtr_code, 'final_grade' => $total, 'quarterly_grade' => $quarterly_grade_array) );

				       	}

				       	array_push($subject_array, 
			            	array(
			            		'sub_id' 			=> $sub_id,
			            		'sub_name' 			=> $sub_name,
			            		'quarter'			=> $quarter_array

			            	)
			       		);
		            }
		             
		        }

			array_push($student_data, 
            	array(
            		'stud_id' 	=> $stud_id,
            		'stud_name' => $stud_name,
            		'subjects'	=> $subject_array
            	)
            );


		}

		$data['student_data'] = $student_data;
		$this->load->view('grading/subject_excellence', $data);

	}

	public function print_report_card(){
		$data['title'] 	= "Report Card";

		$sy_id 			= $this->module->get_active_sy();
		$sec_id 		= $this->uri->segment(3);
		//$sub_id 		= $this->uri->segment(4);

		$data['sec_id']	= $sec_id;
		$section 			= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['section']	= $section;
		$subject			= $this->module->getTableSort('subject', 'sub_sort');

		$student_data 		= array();
		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		$quarter  			= $this->module->get_table('quarter');
		$data['quarters']	= $quarter;
		$qgrade 			= $this->module->table_where('v_quarterly_grade', array('sec_id' => $sec_id, 'sy_id' => $sy_id));

		$data['attendance']  		= $this->module->get_query("SELECT * FROM attendance_hdr ORDER BY athdr_sort ASC");
		$data['attendance_detail'] 	= $this->module->table_where('v_attendance' , array('sec_id' => $sec_id, 'sy_id' => $sy_id) );
		//$data['attendance_detail']  = $this->module->table_where('attendance_detail', array('sy_id' => $sy_id, 'sec_id' => $sec_id ));

		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name 			= '<strong>'.$stud_lastname.'</strong>, '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

			
				$subject_array 		= array();

				foreach($subject->result() as $sj){
					$sub_name   = $sj->sub_name;
		            $sub_id     = $sj->sub_id; 

		            $subject_det    = $this->module->get_query('SELECT COUNT(*) as cnt FROM subject_detail WHERE sub_id = '.$sub_id.' ')->row('cnt');
		            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

		            $check_subject 	= $this->module->table_where('subject_assignment', array('sub_id' => $sub_id, 'sec_id' => $sec_id));
		            if($check_subject->num_rows() > 0){

		            	

		            	$quarter_array = array();
		            	foreach($quarter->result() as $q){
							$qtr_code 			= $q->qtr_code;

							$quarterly_grade_array = array();

							$cnt = 0;
		            		$total_grade = 0;
							foreach($qgrade->result() as $qg){
								$qgh_id 			= $qg->qgh_id;
								$qgh_sub_id 		= $qg->sub_id;
								$qgh_subj_det_id 	= $qg->subj_det_id;
								$qgh_qtr_code 		= $qg->qtr_code;
								$qgh_stud_id 		= $qg->stud_id;
								$qgh_grade 			= $qg->quarterly_grade;

								if( ($qgh_qtr_code == $qtr_code) && ($qgh_sub_id == $sub_id)   && ($stud_id == $qgh_stud_id)){
									$cnt ++;
									$total_grade += $qgh_grade;

									array_push($quarterly_grade_array, array('sub_id' => $qgh_sub_id, 'subj_det_id' => $qg->subj_det_id ,'grade' => $qgh_grade  ));
									
								}


							}

							$total = round( $total_grade / ($cnt == 0 ? $cnt = 1 : $cnt = $cnt));
							array_push($quarter_array, array('qtr_code' => $qtr_code, 'final_grade' => $total, 'quarterly_grade' => $quarterly_grade_array) );

				       	}

				       	array_push($subject_array, 
			            	array(
			            		'sub_id' 			=> $sub_id,
			            		'sub_name' 			=> $sub_name,
			            		'quarter'			=> $quarter_array

			            	)
			       		);
		            }
		             
		        }

			array_push($student_data, 
            	array(
            		'stud_id' 	=> $stud_id,
            		'stud_name' => $stud_name,
            		'subjects'	=> $subject_array
            	)
            );


		}

		$data['student_data'] = $student_data;
		$this->load->view('grading/report_card',$data);
	}
	

	/*public function advisory_class_newfunc(){
		$usr_type       = $this->session->userdata('usr_type');
		$tch_id         = $this->session->userdata('tch_id');
		$landing        = $this->session->userdata('landing');


		$data['title']	= 'Advisory Class';

		$sec_id 		= $this->uri->segment(3);
		$data['section']= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$sy_id 			= $this->module->get_active_sy();
		$data['sec_id']	= $sec_id;
		//$quarter 		= $this->module->table_where('quarter', array('qtr_active' => 'Y'))->row('qtr_code');
		$quarter 		= $this->uri->segment(4);

		$data['students'] 				= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		$data['student_score']  		= $this->module->get_query("SELECT subj_id, sub_id, subj_det_id, stud_id, scr_quarter, scr_type, SUM(sscr_score) AS score, SUM(scr_total_score) AS total_score,  (SUM(sscr_score)*100 ) / SUM(scr_total_score) as average FROM v_student_score WHERE  sec_id = ".$sec_id." AND sy_id = ".$sy_id." AND scr_quarter = '".$quarter."' GROUP BY scr_type, stud_id, scr_quarter, subj_id ");
		$data['component'] 				= $this->module->get_query("SELECT * FROM v_component WHERE sec_id = ".$sec_id." AND sy_id = ".$sy_id." ");
		$data['subject']   				= $this->module->getTableSort('subject', 'sub_sort');
		$data['grade_transmutation'] 	= $this->module->get_table("grade_transmutation");


		$this->load->view('grading/advisory_class', $data);
	}*/

	/*public function rating_sheet(){
		$data['title']	= 'Rating Sheet';

		$sec_id 		= $this->uri->segment(3);
		$sy_id 			= $this->module->get_active_sy();
		$data['sec_id']	= $sec_id;

		$section 			= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['section']	= $section;
		$component 			= $this->module->get_query("SELECT * FROM v_component WHERE sec_id = ".$sec_id." AND sy_id = ".$sy_id." ");
		$subject			= $this->module->getTableSort('subject', 'sub_sort');
		$grade_trans 		= $this->module->get_table("grade_transmutation");
		$student_score 		= $this->module->get_query("SELECT  sec_id,sy_id,subj_id,sub_id,subj_det_id,stud_id,scr_quarter,scr_type,SUM(sscr_score) AS `score`,SUM(scr_total_score) AS `total_score`,ROUND(((SUM(sscr_score) * 100) / SUM(scr_total_score)),3) AS `average` FROM `v_student_score` WHERE   sec_id = ".$sec_id." AND sy_id = ".$sy_id." GROUP BY scr_type,stud_id,scr_quarter,subj_id ");
		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		
		$quarters 			= $this->module->get_table('quarter');

		$student_data 		= array();
		$quarterly_grade   	= 0;

		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name 			= $stud_lastname.', '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

			$subject_array 		= array();
			$ws_pt_qa 			= array();

			foreach($subject->result() as $sj){
				$sub_name   = $sj->sub_name;
	            $sub_id     = $sj->sub_id; 

	            $subject_det    = $this->module->get_query('SELECT COUNT(*) as cnt FROM subject_detail WHERE sub_id = '.$sub_id.' ')->row('cnt');
	            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

	            foreach($component->result() as $t){
	                $ca_ww          = $t->ca_ww_percentage;
	                $ca_pt          = $t->ca_pt_percentage;
	                $ca_qa          = $t->ca_qa_percentage;

	                $tsub_id        = $t->sub_id;
	                $tsubj_det_id   = $t->subj_det_id;
	                $tsubj_id       = $t->subj_id;

	                $wwscore        	= 0;
                    $ptscore        	= 0;
                    $qascore        	= 0;
                    $quarterly_grade   	= 0;

	                //get the component value of the subject
	                if( ($sub_id == $tsub_id) ){


	                	foreach($quarters->result() as $q){
	                		$qcode = $q->qtr_code;

	                		foreach($student_score->result() as $s){
		                        $sstud_id       = $s->stud_id;
		                        $stype          = $s->scr_type;
		                        $ssubj_id       = $s->subj_id;
		                        $ssub_id        = $s->sub_id;
		                        $ssubj_det_id   = $s->subj_det_id;
		                        $saverage       = $s->average;
		                        $sqtr 			= $s->scr_quarter;

		                        if($qcode == $sqtr){
		                        	//compute the grade
			                        if( ($stud_id == $sstud_id) && ($ssubj_id == $tsubj_id) ){

				                        if($stype == 'WW'){ 
			                                $ww     = $saverage * ($ca_ww / 100);
			                                $wwscore = round($ww,3);
			                            }else if($stype == 'PT'){
			                                $pt     = $saverage * ($ca_pt / 100);
			                                $ptscore = round($pt,3);
			                            }else if($stype == 'QA'){
			                                $qa     = $saverage * ($ca_qa / 100);
			                                $qascore = round($qa,3);
			                            }

			                            $initial_grade = $wwscore + $ptscore + $qascore; 

			                            array_push($ws_pt_qa, array('qtr' => $sqtr, 'ww' => $wwscore, 'pt' => $ptscore, 'qa' => $qascore)  );

			                            foreach($grade_trans->result() as $g){
			                                $gt_min     = $g->gt_min;
			                                $gt_max     = $g->gt_max;
			                                $gt_grade   = $g->gt_grade;

			                                if( ($initial_grade >= $gt_min) && ($initial_grade <= $gt_max) ){
			                                    $quarterly_grade = $gt_grade;


			                                }
			                            }


			                        }

		                        }
		                        
		                    }
	                	}

	                    array_push($subject_array, 
			            	array(
			            		'sub_id' 			=> $sub_id,
			            		'subj_id'			=> $tsubj_id,
			            		'sub_name' 			=> $sub_name,
			            		'subj_det_id'		=> $tsubj_det_id,
			            		'grade' 			=> $quarterly_grade,
			            		'wwptqa'			=> $ws_pt_qa
			            	)
			       		); 

	                    
	                }

	            }
	                                         
			} 



			array_push($student_data, 
            	array(
            		'stud_id' 	=> $stud_id,
            		'stud_name' => $stud_name,
            		'subjects'	=> $subject_array
            	)
            );

		}
		
		$data['student_data'] = $student_data;
		//$this->load->view('grading/rating_sheet', $data);
		echo '<pre>';
		print_r($student_data);
	}*/

	/*public function advisory_class_backup(){


			$data['title']	= 'Advisory Class';
			$sec_id 		= $this->uri->segment(3);
			$data['section']= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
			$sy_id 			= $this->module->get_active_sy();
			$quarter 		= $this->module->table_where('quarter', array('qtr_active' => 'Y'))->row('qtr_code');
			
			$data['sec_id']	= $sec_id;

			$data['boys'] 		= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 

			$student_score_data = array();
			$title 				= array();
			$grade_data 		= array();
			
			$subject 		= $this->module->get_query("SELECT * FROM subject ORDER BY sub_sort ASC");
			foreach($subject->result() as $s){
				$sub_id 	= $s->sub_id;
				$sub_name 	= $s->sub_name;
				$subj 		= $this->module->table_where('subject_assignment', array('sec_id' => $sec_id, 'sub_id' => $sub_id)); 
				$subj_det_name 	= '';

				$grade 				= array();
				$title_subj_det_name= array(); 

				if($subj->num_rows() > 0 ){
					foreach ($subj->result() as $l) {
						$subj_det_id 	= $l->subj_det_id;
						$subj_id 		= $l->subj_id;
						$get_name		= $this->module->table_where('subject_detail', array('subj_det_id' => $subj_det_id));
						

						if($get_name->num_rows() > 0){
							foreach($get_name->result() as $de){
								$subj_det_name = $de->subj_det_name;
								array_push($title_subj_det_name, array( 'subj_det_id' => $subj_det_id, 'subj_det_name' => $subj_det_name));
							}							
						}

						$grade_data = $this->module->compute_score_new($sub_id, $quarter, $subj_id , $sec_id, $sy_id, $subj_det_id);
						array_push($grade, array( 'subj_det_id' => $subj_det_id, 'subj_det_name' => $subj_det_name,  'grade' => $grade_data));
					}
				}


				array_push($title, array('sub_id' => $sub_id, 'sub_name' => $sub_name,  'subj_det_name' => $title_subj_det_name ));
				array_push($student_score_data, array('subj_id' => $subj_id, 'sub_id' => $sub_id, 'sub_name' => $sub_name, 'grade_data' => $grade));
				
			}

			
			$data['thead']		= $title;
			$data['student'] 	= $student_score_data;

		$this->load->view('grading/advisory_class', $data);
		
	}

	public function advisory_class_test(){

			$data['title']	= 'Advisory Class';
			$sec_id 		= $this->uri->segment(3);
			$data['section']= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
			$sy_id 			= $this->module->get_active_sy();
			$quarter 		= $this->module->table_where('quarter', array('qtr_active' => 'Y'))->row('qtr_code');
			//$data['subject']= $this->module->get_query("SELECT * FROM subject ORDER BY sub_sort ASC");
			$data['sec_id']	= $sec_id;

			$subject_data 		= array();
			$quarterly_grade 	= array();
			
			$subject = $this->module->get_table("v_subject_subject_detail");

			foreach($subject->result() as $s){
				$subj_id = $s->subj_id;
				$grade = $this->module->table_where('v_quarterly_grade', array('sy_id' => $sy_id, 'qtr_code' => $quarter, 'sec_id' => $sec_id, 'subj_id' => $subj_id));

				

				array_push($subject_data, array('subj_id' => $subj_id, 'subj_name' => $s->sub_name.' '.$s->subj_det_name, 'grade_data' =>  $grade->result() ));
				
				
				
			}

          	echo '<pre>';
    		print_r($subject_data);
    		echo '</pre>';

	}*/


	/*public function print_advisory_class(){

		$data['title']	= 'Advisory Class';
		$sec_id 		= $this->uri->segment(3);
		$sy_id 			= $this->module->get_active_sy();
		$data['sec_id']	= $sec_id;
		$quarter 		= $this->module->table_where('quarter', array('qtr_active' => 'Y'))->row('qtr_code');

		$section 			= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['section']	= $section;
		$component 			= $this->module->get_query("SELECT * FROM v_component WHERE sec_id = ".$sec_id." AND sy_id = ".$sy_id." ");
		$subject			= $this->module->getTableSort('subject', 'sub_sort');
		$grade_trans 		= $this->module->get_table("grade_transmutation");
		$student_score 		= $this->module->get_query("SELECT sec_id,sy_id,subj_id,sub_id,subj_det_id,stud_id,scr_quarter,scr_type,SUM(sscr_score) AS `score`,SUM(scr_total_score) AS `total_score`,((SUM(sscr_score) * 100) / SUM(scr_total_score)) AS `average` FROM `v_student_score` WHERE   sec_id = ".$sec_id." AND sy_id = ".$sy_id." AND scr_quarter = '".$quarter."' GROUP BY scr_type,stud_id,scr_quarter,subj_id ");
		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		
		$student_data 		= array();
		
		$quarterly_grade   	= 0;

		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name = $stud_lastname.', '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

			$subject_array 		= array();

			foreach($subject->result() as $sj){
				$sub_name   = $sj->sub_name;
	            $sub_id     = $sj->sub_id; 

	            $subject_det    = $this->module->get_query('SELECT COUNT(*) as cnt FROM subject_detail WHERE sub_id = '.$sub_id.' ')->row('cnt');
	            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

	            foreach($component->result() as $t){
	                $ca_ww          = $t->ca_ww_percentage;
	                $ca_pt          = $t->ca_pt_percentage;
	                $ca_qa          = $t->ca_qa_percentage;

	                $tsub_id        = $t->sub_id;
	                $tsubj_det_id   = $t->subj_det_id;
	                $tsubj_id       = $t->subj_id;

	                $wwscore        	= 0;
                    $ptscore        	= 0;
                    $qascore        	= 0;
                    $quarterly_grade   	= 0;

	                //get the component value of the subject
	                if( ($sub_id == $tsub_id) ){

	                    foreach($student_score->result() as $s){
	                        $sstud_id       = $s->stud_id;
	                        $stype          = $s->scr_type;
	                        $ssubj_id       = $s->subj_id;
	                        $ssub_id        = $s->sub_id;
	                        $ssubj_det_id   = $s->subj_det_id;
	                        $saverage       = $s->average;


	                        //compute the grade
	                        
	                        if( ($stud_id == $sstud_id) && ($ssubj_id == $tsubj_id) ){

		                        if($stype == 'WW'){ 
	                                $ww     = $saverage * ($ca_ww / 100);
	                                $wwscore = round($ww,2);
	                            }else if($stype == 'PT'){
	                                $pt     = $saverage * ($ca_pt / 100);
	                                $ptscore = round($pt,2);
	                            }else if($stype == 'QA'){
	                                $qa     = $saverage * ($ca_qa / 100);
	                                $qascore = round($qa,2);
	                            }

	                            $initial_grade = $wwscore + $ptscore + $qascore; 

	                            foreach($grade_trans->result() as $g){
	                                $gt_min     = $g->gt_min;
	                                $gt_max     = $g->gt_max;
	                                $gt_grade   = $g->gt_grade;

	                                if( ($initial_grade >= $gt_min) && ($initial_grade <= $gt_max) ){
	                                    $quarterly_grade = $gt_grade;
	                                }
	                            }

	                        }

	                    }

	                    array_push($subject_array, 
			            	array(
			            		'sub_id' 			=> $sub_id,
			            		'subj_id'			=> $tsubj_id,
			            		'sub_name' 			=> $sub_name,
			            		'subj_det_id'		=> $tsubj_det_id,
			            		'grade' 			=> $quarterly_grade 

			            	)
			       		); 

	                    
	                }

	            }
	                                         
			} 



			array_push($student_data, 
            	array(
            		'stud_id' 	=> $stud_id,
            		'stud_name' => $stud_name,
            		'subjects'	=> $subject_array
            	)
            );

		}
		
		$data['student_data'] = $student_data;
			
		$this->load->view('grading/print_advisory_class', $data);
		
	}*/

	public function print_advisory_class(){
		$data['title']	= 'Advisory Class';

		$sec_id 		= $this->uri->segment(3);
		$sy_id 			= $this->module->get_active_sy();
		$data['sec_id']	= $sec_id;
		$qtr 			= $this->uri->segment(4);


		$section 			= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['section']	= $section;
		$subject			= $this->module->getTableSort('subject', 'sub_sort');
		$data['subject']	= $subject;

		$student_data 		= array();
		$students			= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		$quarter  			= $this->module->get_table('quarter');
		$data['quarters']	= $quarter;
		$qgrade 			= $this->module->table_where('v_quarterly_grade', array('sec_id' => $sec_id, 'sy_id' => $sy_id, 'qtr_code' => $qtr));

		//echo $this->db->last_query();

		


		foreach($students->result() as $st){
			$stud_id 			= $st->stud_id;
			$stud_lastname 		= $st->stud_lastname;
			$stud_firstname 	= $st->stud_firstname;
			$stud_middlename 	= $st->stud_middlename;
			$stud_name 			= '<strong>'.$stud_lastname.'</strong>, '.$stud_firstname.' '.(empty($stud_middlename) ? '' : substr($st->stud_middlename,0, 1).'.');

				$disq_grade 		= array();
				$subject_array 		= array();
				
				$total 				= 0;
				$average  			= 0;
				$total_cnt 			= 0;
				

				foreach($subject->result() as $sj){
					$sub_name   = $sj->sub_name;
		            $sub_id     = $sj->sub_id; 
		            $subject_detail = $this->module->table_where('subject_detail', array('sub_id' => $sub_id));

		            $check_subject 	= $this->module->table_where('subject_assignment', array('sub_id' => $sub_id, 'sec_id' => $sec_id));
		            if($check_subject->num_rows() > 0){

		            	$cnt 			= 0;
		            	$total_grade 	= 0;
		            	$quarterly_grade_array = array();	   	

		            	foreach($qgrade->result() as $qg){
							$qgh_id 			= $qg->qgh_id;
							$qgh_sub_id 		= $qg->sub_id;
							$qgh_subj_det_id 	= $qg->subj_det_id;
							$qgh_stud_id 		= $qg->stud_id;
							$qgh_grade 			= $qg->quarterly_grade;

							if( ($qgh_sub_id == $sub_id)   && ($stud_id == $qgh_stud_id)){
								$cnt ++;
								$total_grade += $qgh_grade;
								array_push($quarterly_grade_array, array('sub_id' => $qgh_sub_id, 'subj_det_id' => $qg->subj_det_id ,'grade' => $qgh_grade ));

							}

						}

						$total = round( $total_grade / ($cnt == 0 ? $cnt = 1 : $cnt = $cnt));

				       	array_push($subject_array, 
			            	array(
			            		'sub_id' 			=> $sub_id,
			            		'sub_name' 			=> $sub_name,
			            		'total_grade'		=> $total,
			            		'subject_details'	=> $quarterly_grade_array

			            	)
			       		);

			       		$average += $total; 
		            	$total_cnt  ++;
		            }

		          
		           
		             
		        }

			array_push($student_data, 
            	array(
            		'stud_id' 		=> $stud_id,
            		'stud_name' 	=> $stud_name,
            		'average' 		=> round(($average / ($total_cnt)),2),
            		'subjects'		=> $subject_array
            	)
            );

		}


		function rank($a, $b)
		  {
		    return strnatcmp($b['average'], $a['average']);
		  }

		  // sort alphabetically by name
		  uasort($student_data, 'rank');

		$data['student_data'] = $student_data;

		$this->load->view('grading/print_advisory_class', $data);
	}

	public function print_award(){
		$data['title']	= 'Print Award';

		$usr_type       = $this->session->userdata('usr_type');
		$tch_id         = $this->session->userdata('tch_id');
		$landing        = $this->session->userdata('landing');

	

			
			$sec_id 		= $this->uri->segment(3);
			$data['section']= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
			$sy_id 			= $this->module->get_active_sy();
			$quarter 		= $this->module->table_where('quarter', array('qtr_active' => 'Y'))->row('qtr_code');
			$subject 		= $this->module->get_query("SELECT * FROM subject ORDER BY sub_sort ASC");
			$data['sec_id']	= $sec_id;

			$data['boys'] 		= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 

			$student_score_data = array();
			$title 				= array();

			$grade_data 		= array();
			

			foreach($subject->result() as $s){
				$sub_id 	= $s->sub_id;
				$sub_name 	= $s->sub_name;
				$subj 		= $this->module->table_where('subject_assignment', array('sec_id' => $sec_id, 'sub_id' => $sub_id)); 
				$subj_det_name 	= '';

				$grade 				= array();
				$title_subj_det_name= array(); 

				if($subj->num_rows() > 0 ){
					foreach ($subj->result() as $l) {
						$subj_det_id 	= $l->subj_det_id;
						$subj_id 		= $l->subj_id;
						$get_name		= $this->module->table_where('subject_detail', array('subj_det_id' => $subj_det_id));
						

						if($get_name->num_rows() > 0){
							foreach($get_name->result() as $de){
								$subj_det_name = $de->subj_det_name;
								array_push($title_subj_det_name, array('subj_det_id' => $subj_det_id, 'subj_det_name' => $subj_det_name));
							}							
						}

						$grade_data = $this->module->compute_score($sub_id, $quarter, $subj_id , $sec_id, $sy_id, $subj_det_id);
						array_push($grade, array('subj_det_id' => $subj_det_id, 'subj_det_name' => $subj_det_name,  'grade' => $grade_data));
					}
				}


				array_push($title, array('sub_id' => $sub_id, 'sub_name' => $sub_name,  'subj_det_name' => $title_subj_det_name ));
				array_push($student_score_data, array('sub_id' => $sub_id, 'sub_name' => $sub_name, 'grade_data' => $grade));
				
			}

			
			//$data['thead']		= $title;
			$data['awards'] 	= $student_score_data;
			$this->load->view('grading/print_award', $data);
		
	}

	public function submit_grade(){

		$sy_id 			= $this->input->post('sy_id', true);
		$subj_id 		= $this->input->post('subj_id', true);
		$sub_id 		= $this->input->post('sub_id', true);
		$subj_det_id 	= $this->input->post('subj_det_id', true);
		$sec_id 		= $this->input->post('sec_id', true);
		$qtr_code 		= $this->input->post('qtr_code', true);


		$check_quarterly_data = array(
			"sy_id" 		=> $sy_id,
			"subj_id" 		=> $subj_id,
			"sec_id" 		=> $sec_id,
			"qtr_code" 		=> $qtr_code
		);

		$check  = $this->module->table_where('quarterly_grade_hdr', $check_quarterly_data);

		if($check->num_rows() > 0 ){
			$qgh_id = $check->row('qgh_id');

			//$this->module->update('quarterly_grade_hdr', array('qgh_id' => $qgh_id));

			if($this->module->delete('quarterly_grade', array('qgh_id' => $qgh_id)) ){

				$data 		= $this->input->post(null,true);
				$grade_data = array();

		        foreach($data as $d => $k){

					if(strpos($d, 'qtr_grade')!== FALSE){

						$qtr_code 			= empty($k["qtr_code"])			?'': $k["qtr_code"];
						$stud_id 			= empty($k["stud_id"])			?'': $k["stud_id"];
						$initial_grade 		= empty($k["initial_grade"])	?'': $k["initial_grade"];
						$quarterly_grade 	= empty($k["quarterly_grade"])	?'': $k["quarterly_grade"];
						
						if(!empty($sec_id) && !empty($sub_id))
							{
								$quarterly_grade = array(
									"qgh_id"			=> $qgh_id,
									"stud_id" 			=> $stud_id,
									"initial_grade" 	=> $initial_grade,
									"quarterly_grade" 	=> $quarterly_grade
								);
								$this->module->insert('quarterly_grade', $quarterly_grade);
							}
					}// if student
				}
			}

		}else{

			$quarterly_grade_hdr = array(
				"sy_id" 		=> $sy_id,
				"subj_id" 		=> $subj_id,
				"sub_id" 		=> $sub_id,
				"subj_det_id" 	=> $subj_det_id,
				"sec_id" 		=> $sec_id,
				"qtr_code" 		=> $qtr_code
			);

			if($this->module->insert('quarterly_grade_hdr', $quarterly_grade_hdr)){
				$qgh_id 	= $this->db->insert_id();
				$data 		= $this->input->post(null,true);
				$grade_data = array();

		        foreach($data as $d => $k){

					if(strpos($d, 'qtr_grade')!== FALSE){

						$qtr_code 			= empty($k["qtr_code"])?'': $k["qtr_code"];
						$stud_id 			= empty($k["stud_id"])	?'': $k["stud_id"];
						$initial_grade 		= empty($k["initial_grade"])?'': $k["initial_grade"];
						$quarterly_grade 	= empty($k["quarterly_grade"])?'': $k["quarterly_grade"];
						
						if(!empty($sec_id) && !empty($sub_id))
							{
										
								$quarterly_grade = array(
									"qgh_id"			=> $qgh_id,
									"stud_id" 			=> $stud_id,
									"initial_grade" 	=> $initial_grade,
									"quarterly_grade" 	=> $quarterly_grade
								);

								$this->module->insert('quarterly_grade', $quarterly_grade);

							}

						
					}// if student

				}

			}	
		}

		$this->module->my_return(true,'Successfully submitted your grades.');

	}




	/*public function test(){
			$data['title']		= 'Advisory Class';
			$sec_id 			= $this->uri->segment(3);
			$data['sec_id']		= $sec_id;

			$data['section']	= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
			$data['boys'] 		= $this->module->get_query("SELECT * FROM v_section_assignment WHERE sec_id = ".$sec_id." AND stud_gender = 'Male' ORDER BY stud_lastname, stud_firstname ASC"); 
			$data['girls'] 		= $this->module->get_query("SELECT * FROM v_section_assignment WHERE sec_id = ".$sec_id." AND stud_gender = 'Female' ORDER BY stud_lastname, stud_firstname ASC"); 
			
			$sy_id 				= $this->module->get_active_sy();

			$student_score_data = array();
			$title 				= array();


			
			$student_section_assignment = $this->module->get_query("SELECT * FROM v_section_assignment WHERE sec_id = ".$sec_id." ORDER BY stud_lastname ASC");
			$subject 					= $this->module->get_query("SELECT * FROM subject ORDER BY sub_sort ASC");
			$quarter 					= $this->module->table_where('quarter', array('qtr_active' => 'Y'))->row('qtr_code');

			$english 		= 0;
			$mapeh			= 0;
			$total_grade	= 0;
			

			foreach ($student_section_assignment->result() as $v) {
				$stud_id  	= $v->stud_id;
				$my_subject = array();

				
				foreach ($subject->result() as $k) {
					$sub_id = $k->sub_id;
					$subject_assignment = $this->module->table_where('v_student_section_subject_assignment', array('stud_id' => $stud_id, 'sub_id' => $sub_id));
					$subj_data =	array();

					
					$grade 	= 0;
					$cnt 	= 0;
					foreach($subject_assignment->result() as $p){

						$subj_id 		= $p->subj_id;
						$subj_det_id 	= $p->subj_det_id;
						$teacher 		= $p->tch_firstname.' '.$p->tch_lastname;
						$quarter_grade  = $this->module->compute_score($sub_id, $quarter,$subj_id,$stud_id);

						array_push($subj_data, array(
							'subj_id' 		=> $subj_id, 
							'subj_det_id' 	=> $subj_det_id, 
							'subj_det_name' => $this->module->table_where('subject_detail', array('subj_det_id' => $subj_det_id))->row('subj_det_name'),
							'score' 		=> $quarter_grade
							
						));

						$grade 	+=  $quarter_grade;
						$cnt++;
					}


					$subjects = array(
						'sub_id' 		=> $sub_id,
						'sub_name'		=> $k->sub_name, 
						'total_score' 	=> $grade,
						'cnt'			=> $cnt,
						'subj_data' 	=> $subj_data,
						
					);

					array_push($my_subject, $subjects);
					
				}
				

				$stud_data = array(
					'stud_id'			=> $stud_id,
					'stud_name' 		=> $v->stud_lastname.', '.$v->stud_firstname,
					'stud_subjects'  	=> $my_subject
				);
				
				array_push($student_score_data, $stud_data);
				
			}
			
			
			//$data['student'] = $student_score_data;
			//echo '<pre>';
			print_r($title);
			//$this->load->view('grading/advisory_class', $data);
	}



	public function test2(){
		$sec_id 	= $this->uri->segment(3);
		$sy_id 		= $this->module->get_active_sy();
		$quarter 	= $this->module->table_where('quarter', array('qtr_active' => 'Y'))->row('qtr_code');
		$subject 	= $this->module->get_query("SELECT * FROM subject ORDER BY sub_sort ASC");

		$student_score_data = array();

		foreach($subject->result() as $s){
			$sub_id 	= $s->sub_id;
			$sub_name 	= $s->sub_name;
			$subj 		= $this->module->table_where('subject_assignment', array('sec_id' => $sec_id, 'sub_id' => $sub_id)); 
			$subj_det_name 	= '';

			$grade = array();

			if($subj->num_rows() > 0 ){
				foreach ($subj->result() as $l) {
					$subj_det_id 	= $l->subj_det_id;
					$subj_id 		= $l->subj_id;

					$get_name		= $this->module->table_where('subject_detail', array('subj_det_id' => $subj_det_id));
					

					if($get_name->num_rows() > 0){
						$subj_det_name = $get_name->row('subj_det_name');
					}

					$grade_data = $this->module->compute_score($sub_id, $quarter, $subj_id , $sec_id, $sy_id);
					array_push($grade, array('subj_det_id' => $subj_det_id, 'subj_det_name' => $subj_det_name,  'grade' => $grade_data));
				}
			}



			array_push($student_score_data, array('sub_id' => $sub_id, 'sub_name' => $sub_name, 'grade_data' => $grade));
			
		}

		
		echo '<pre>';
		print_r($student_score_data);


	}


	public function test_class(){
		$sec_id 		= $this->uri->segment(3);
		$component      = $this->module->get_table("component_assessment");
		$section 		= $this->module->get_query("SELECT * FROM v_section_assignment WHERE sec_id =".$sec_id." ");
		$sy_id 			= $this->module->get_active_sy();
		//$student_score 	= $this->module->get_query();
		$subject 		= $this->module->get_query("SELECT * FROM subject ORDER BY sub_sort ASC");

		$student_data = array();
		$title 		  = array();

		if($section->num_rows() > 0){

			foreach($section->result() as $r){
	            $student_info = array(
	            	'stud_id' 		=> $r->stud_id,
	            	'student_name' 	=> $r->stud_lastname.', '.$r->stud_firstname.' '.substr($r->stud_middlename, 0,1).(empty($r->stud_middlename) ? '' : '. ').$r->stud_suffix, 
	            	'stud_lrn'		=> $r->stud_lrn,
	            	'stud_gender' 	=> $r->stud_gender,
	            	'stud_age'		=> $this->module->get_age($r->stud_birthdate)
	            );

	            array_push($student_data, $student_info);
				
           }


			foreach($subject->result() as $s){
				$sub_id 		= $s->sub_id;
				$sub_name 		= $s->sub_name;
				$subj 			= $this->module->table_where('subject_assignment', array('sec_id' => $sec_id, 'sub_id' => $sub_id)); 
				$subj_det_name 	= '';

				$grade 				= array();
				$title_subj_det_name= array(); 

				if($subj->num_rows() > 0 ){
					foreach ($subj->result() as $l) {
						$subj_det_id 	= $l->subj_det_id;
						$subj_id 		= $l->subj_id;
						$get_name		= $this->module->table_where('subject_detail', array('subj_det_id' => $subj_det_id));
						

						if($get_name->num_rows() > 0){
							foreach($get_name->result() as $de){
								$subj_det_name = $de->subj_det_name;
								array_push($title_subj_det_name, array('subj_det_id' => $subj_det_id, 'subj_det_name' => $subj_det_name));
							}							
						}

						//$grade_data = $this->module->compute_score($sub_id, $quarter, $subj_id , $sec_id, $sy_id, $subj_det_id);
						//array_push($grade, array('subj_det_id' => $subj_det_id, 'subj_det_name' => $subj_det_name,  'grade' => $grade_data));
					}
				}


				array_push($title, array('subj_id' => $subj_id, 'sub_id' => $sub_id, 'sub_name' => $sub_name,  'subj_det_name' => $title_subj_det_name ));


		          	
			}
        }

		echo '<pre>';
		//print_r($subject->result());
		//echo '<br/>'.$sub_name;
		print_r($title);
		echo '</pre>';
	}*/


	/*public function rating_sheet(){
		$data['title']	= 'Rating Sheet';

		$sub_id 			= $this->uri->segment(3);
		$subj_det_id		= $this->uri->segment(4);
		$sec_id 			= $this->uri->segment(5);
		$sy_id      		= $this->module->get_active_sy();


		$data['section']	= $this->module->get_query("SELECT * FROM v_section WHERE sec_id =".$sec_id." ");
		$data['students'] 	= $this->module->get_query("SELECT * FROM v_student_section_subject_assignment WHERE sec_id = ".$sec_id."  GROUP BY stud_id ORDER BY stud_lastname, stud_firstname ASC "); 
		$data['grade_data']	= $this->module->compute_score_subject($sy_id, $sec_id, $sub_id,  $subj_det_id);

		$this->load->view('grading/rating_sheet', $data);
	}*/

	








}
