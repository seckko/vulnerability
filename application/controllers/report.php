<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Report extends CI_Controller {

	public function __construct(){
		parent::__construct();
	}
	
	public function master_list()
	{
		if(!$this->input->is_ajax_request())
			{
				$data['title'] 		=	"Master List";
				$data['section']	= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
				$this->load->view('report/master_list',$data);
			}
		else
			{
				
			}
	}

	public function print_master_list()
	{
		$data['title'] 				= 'Class List';
		$data['section']			= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
		$this->load->view('report/print_master_list', $data);
	}

	public function excel_master_list()
	{
		$data['title'] 				= 'STUDENT DIRECTORY  SY '.$this->module->get_active_sy_name();
		$data['section']			= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
		$this->load->view('report/excel_master_list', $data);
	}

	public function excel_short_masterlist()
	{
		$data['title'] 				= 'STUDENT DIRECTORY  SY '.$this->module->get_active_sy_name();
		$data['sy_id']				= $this->module->get_active_sy(); 
		$data['section']			= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
		$this->load->view('report/excel_short_masterlist', $data);
	}

	public function excel_bag_tag()
	{
		$data['title'] 				= 'STUDENT DIRECTORY  SY '.$this->module->get_active_sy_name();
		$data['sy_id']				= $this->module->get_active_sy(); 
		$data['section']			= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
		$this->load->view('report/excel_bag_tag', $data);
	}

	public function print_enrollment_summary(){
		$data['title'] 		= 'Enrollment Summary';
		$data['summary']	= $this->module->get_query("SELECT dept_name, lvl_name, sec_name,stud_gender, COUNT(*) AS cnt FROM v_section_students GROUP BY sec_name, stud_gender ORDER BY sec_sort, lvl_sort");
		$this->load->view('report/print_enrollment_summary', $data);
	}

	public function message_cast(){
		$data['title'] 				= 'Message Cast';
		$sy 						= $this->module->get_active_sy();
		//$data['section']			= $this->module->get_table('section');
		$data['department']			= $this->module->get_table('department');
		$data['student_section']	= $this->module->get_query("SELECT * FROM v_section_students WHERE sy_id = ".$sy."  ORDER BY lvl_sort, sec_sort, stud_lastname ASC");
		$this->load->view('report/message_cast', $data);
	}

	public function print_class_list(){
		$data['title'] 				= 'Class List';
		$data['section']			= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
		$this->load->view('report/print_class_list', $data);
	}

	public function print_class_list_no_gender(){
		$data['title'] 				= 'Class List';
		$data['section']			= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
		$this->load->view('report/print_class_list_no_gender', $data);
	}

	public function excel_class_list(){
		$data['title'] 				= 'Class List';
		$data['section']			= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
		$this->load->view('report/excel_class_list_shon', $data);
	}

	public function excel_class_list_no_gender(){
		$data['title'] 				= 'Class List';
		$data['section']			= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
		$this->load->view('report/excel_class_list_no_gender', $data);
	}


	public function excel_new_student(){
		$data['title'] 			= 'Report - New Student';
		$sy_id 					= $this->module->get_active_sy();
		$data['new']			= $this->module->get_query("SELECT * FROM v_section_students WHERE sy_id = ".$sy_id." AND se_stud_type = 'N' ORDER BY sec_sort, stud_lastname ASC");
		$this->load->view('report/excel_new_student', $data);
	}

	public function excel_new_student_contact(){
		$data['title'] 			= 'Report - New Student Contact';
		$sy_id 					= $this->module->get_active_sy();
		$data['new']			= $this->module->get_query("SELECT * FROM v_section_students WHERE sy_id = ".$sy_id." AND se_stud_type = 'N'  ORDER BY sec_sort, stud_lastname, stud_firstname ASC"); /*AND se_stud_type = 'N'*/
		$this->load->view('report/excel_new_student_contact', $data);
	}

	public function excel_gobag(){
		$data['title'] 			= 'Report - Go Bag Information';
		$sy_id 					= $this->module->get_active_sy();
		$data['go_bag']			= $this->module->get_query("SELECT * FROM v_section_students WHERE sy_id = ".$sy_id."  ORDER BY sec_sort, stud_lastname, stud_firstname ASC"); /*AND se_stud_type = 'N'*/
		$this->load->view('report/excel_new_student_contact', $data);
	}

	public function excel_for_id(){
		$data['title'] 			= 'Report - For ID';
		$sy_id 					= $this->module->get_active_sy();
		$data['section']		= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
		$data['go_bag']			= $this->module->get_query("SELECT * FROM v_section_students WHERE sy_id = ".$sy_id."  ORDER BY sec_sort, stud_lastname, stud_firstname ASC"); /*AND se_stud_type = 'N'*/
		$this->load->view('report/excel_id', $data);
	}

	public function age_profile(){
		$data['title'] 			= 'Report - Age Profile';
		$sy_id 					= $this->module->get_active_sy();
		$data['level']			= $this->module->get_query("SELECT lvl_id, lvl_name FROM grade_level  ORDER BY lvl_sort ASC");
		$this->load->view('report/age_profile', $data);
	}

	public function filter_message_cast(){
		$data['title'] 	= 'Message Cast';
		$dept_id 		= $this->input->post('dept_id', true);
		$lvl_id 		= $this->input->post('lvl_id', true);
		$sec_id 		= $this->input->post('sec_id', true);
		$stud_type 		= $this->input->post('stud_type', true);

		/*$type = '';

		if(empty($stud_type)){

		}else if($stud_type == 'N'){
			$type = 'N';
		}else{

		}*/

		$where 	= '';

		$sy = $this->module->get_active_sy();

		if($dept_id == 'all'){
			$where = 'sy_id = '.$sy;
		}else{
			if($lvl_id == 'all'){
				$where 	=  'sy_id = '.$sy.' AND dept_id = '.$dept_id; 
			}else{
				$where = ' sy_id = '.$sy.' AND dept_id = '.$dept_id. ' AND lvl_id = '.$lvl_id;  

				if($sec_id == 'all'){
					$where = $where;
				}else{
					$where = ' sy_id = '.$sy.' AND dept_id = '.$dept_id. ' AND lvl_id = '.$lvl_id . ' AND sec_id ='.$sec_id;
				}
			}
		}

		$data['message_cast'] = $this->module->get_query("SELECT * FROM v_section_students WHERE ".$where."  ORDER BY stud_lastname ASC");
		$this->load->view('report/excel_messagecast', $data);
	}

	public function generate_csv_message_cast(){
		$data['title'] 	= 'Message Cast';
		$dept_id 		= $this->input->post('dept_id', true);
		$lvl_id 		= $this->input->post('lvl_id', true);
		$sec_id 		= $this->input->post('sec_id', true);

		$where 		= '';
		$name 		= '';
		$section 	= '';

		$sy = $this->module->get_active_sy();

		if($dept_id == 'all'){
			$where 				= 'sy_id = '.$sy;
			$name  				= 'All Student';
		}else{
			if($lvl_id == 'all'){
				$where 			=  'sy_id = '.$sy.' AND dept_id = '.$dept_id; 
				$name  			=  $this->module->table_where('department', array('dept_id'=>$dept_id))->row('dept_name');
			}else{
				$where 			= ' sy_id = '.$sy.' AND dept_id = '.$dept_id. ' AND lvl_id = '.$lvl_id;  

				if($sec_id == 'all'){
					$where 		= $where;
					$name  		=  $this->module->table_where('grade_level', array('lvl_id'=>$lvl_id))->row('lvl_name');
				}else{
					$where 		= ' sy_id = '.$sy.' AND dept_id = '.$dept_id. ' AND lvl_id = '.$lvl_id . ' AND sec_id ='.$sec_id;
					$section 	= $this->module->table_where('v_section', array('sec_id' => $sec_id));
					$name  		=  $section->row('lvl_name').' - '.$section->row('sec_name');
				}
			}
		}

		$data['grade_level'] 	= $name;
		$data['message_cast'] 	= $this->module->get_query("SELECT stud_lastname, stud_firstname, stud_guardian_contact FROM v_section_students WHERE ".$where." ORDER BY stud_lastname ASC");
		$this->load->view('report/generate_csv_message_cast', $data);
	}

	public function generate_csv_mop(){
		$data['title'] 	= 'Message Cast';
		$mode 			= $this->input->post('mode', true);

		$data['mode']	= $mode;
		$data['mop'] 	= $this->module->table_where('v_student_assessment', array('as_mode' => $mode));
		$this->load->view('report/generate_csv_mop', $data);
	}



	public function get_level(){
		$dept_id = $this->uri->segment(3);

		$get = $this->module->table_where('grade_level', array('dept_id' => $dept_id));
			echo '<option value="all">ALL</option>';
		foreach($get->result() as $r){
			echo '<option value="'.$r->lvl_id.'">'.$r->lvl_name.'</option>';
		}
	}

	public function get_section(){
		$lvl_id = $this->uri->segment(3);

		$get = $this->module->table_where('section', array('lvl_id' => $lvl_id));
			echo '<option value="all">ALL</option>';
		foreach($get->result() as $r){
			echo '<option value="'.$r->sec_id.'">'.$r->sec_name.'</option>';
		}
	}

	public function collection(){
		$data['title']		= "Collection";
		//$data['summary']	= $this->module->get_query(" SELECT lvl_name,as_sib_discount, as_mode, COUNT(*) AS cnt FROM v_student_assessment GROUP BY lvl_name, as_sib_discount, as_mode ORDER BY lvl_sort ASC ");
		$sy_id 				 = $this->module->get_active_sy() ;
		$data['grade_level'] = $this->module->get_table('grade_level');
		$data['tf_summary']  = $this->module->table_where("v_tf_sumary", array('sy_id' => $sy_id));
		$this->load->view('report/collection', $data);
	}



	public function excel_mode_payment()
	{
		$data['title'] 				= 'Student Mode of Payment - SY '.$this->module->get_active_sy_name();
		$data['sy_id']				= $this->module->get_active_sy(); 
		$data['section']			= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students GROUP BY sec_id ORDER BY sec_sort ASC");
		//$data['mode']				= $this->module->get_query("SELECT * FROM v_student_mode_payment WHERE sy_id = ".$this->module->get_active_sy()." ");
		$this->load->view('report/excel_mode_payment', $data);
	}

	public function excel_student_contacts(){
		$data['title'] 		= 'Student Contacts';
		$sy_id 				= $this->module->get_active_sy(); //$this->uri->segment(3); /**/
		$data['student'] 	= $this->module->get_query("SELECT * FROM v_section_students WHERE sy_id = ".$sy_id." ORDER BY lvl_id, sec_id,stud_lastname, stud_firstname");
		$this->load->view('records/excel_student_contacts', $data);
	}


	public function receivables(){
		$data['title'] 			= 'Receivables';
		$sy_id 					= $this->module->get_active_sy();
		$data['level']			= $this->module->get_query("SELECT lvl_id, lvl_name FROM grade_level  ORDER BY lvl_sort ASC");
		$data['student_section']= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students WHERE se_mode_payment GROUP BY sec_id ORDER BY sec_sort, stud_lastname ASC");
		$data['enrollment_data']= $this->module->get_query("SELECT * FROM v_student_fees WHERE sy_id = ".$sy_id." AND se_mode_payment <> 'CASH' ORDER BY sec_sort,stud_lastname ASC " );
		//echo $this->db->last_query();
		$data['payment_data'] 	= $this->module->get_query("SELECT sy_id, sec_id, stud_id, stud_lastname, stud_firstname, tf_months, round(SUM(ABS(tf_sub_total)),2) AS tf FROM v_student_payment_record_tf WHERE sy_id = ".$sy_id."  GROUP BY stud_id, tf_months");
		
		//echo $this->db->last_query();
		
		$data['fee_schedule']	= $this->module->get_query("SELECT * FROM v_active_fee_sched  ORDER BY lvl_sort ASC");
		$data['active_tf']		= $this->module->get_table('v_active_fee_sched');
		$this->load->view('report/receivables', $data);

	}

	public function print_receivables(){
		$data['title'] 			= 'Receivables';
		$sy_id 					= $this->module->get_active_sy();
		$data['level']			= $this->module->get_query("SELECT lvl_id, lvl_name FROM grade_level  ORDER BY lvl_sort ASC");
		$data['student_section']= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students WHERE se_mode_payment GROUP BY sec_id ORDER BY sec_sort, stud_lastname ASC");
		$data['enrollment_data']= $this->module->get_query("SELECT * FROM v_student_fees WHERE sy_id = ".$sy_id." AND se_mode_payment <> 'CASH' ORDER BY sec_sort, stud_lastname ASC " );
		//echo $this->db->last_query();
		$data['payment_data'] 	= $this->module->get_query("SELECT sy_id, sec_id, stud_id, stud_lastname, stud_firstname, tf_months, round(SUM(tf_sub_total),2) AS tf FROM v_student_payment_record_tf WHERE sy_id = ".$sy_id."  GROUP BY stud_id, tf_months");
		

		$data['fee_schedule']	= $this->module->get_query("SELECT * FROM v_active_fee_sched  ORDER BY lvl_sort ASC");
		$data['active_tf']		= $this->module->get_table('v_active_fee_sched');
		$this->load->view('report/print_receivables', $data);

	}

	public function excel_receivables()
	{
		$data['title'] 				= 'Excel Receivables';
		$sy_id 					= $this->module->get_active_sy();
		$data['sy_id']				= $this->module->get_active_sy(); 
		$data['level']			= $this->module->get_query("SELECT lvl_id, lvl_name FROM grade_level  ORDER BY lvl_sort ASC");
		$data['student']		= $this->module->get_query("SELECT lvl_name, sec_id, sec_name, sec_teacher FROM v_section_students WHERE se_mode_payment GROUP BY sec_id ORDER BY sec_sort, stud_lastname ASC");
		$data['enrollment']		= $this->module->table_where("v_student_fees", array('sy_id' => $sy_id) );
		$data['payment_data'] 	= $this->module->get_query("SELECT sy_id, sec_id, stud_id, stud_lastname, tf_months, SUM(tf_sub_total) AS tf FROM v_student_payment_record_tf WHERE sy_id = ".$sy_id."  GROUP BY stud_id, tf_months");
		$data['fee_schedule']	= $this->module->get_query("SELECT * FROM v_active_fee_sched  ORDER BY lvl_sort ASC");
		$data['active_tf']		= $this->module->get_table('v_active_fee_sched');
		$this->load->view('report/excel_receivables', $data);
	}


	public function get_out_balance(){
		$stud_id 				= 344;
		$sy_id 					= $this->module->get_active_sy();
		$payment_data 			= $this->module->get_query("SELECT sy_id, sec_id, stud_id, stud_lastname, stud_firstname, tf_months, round(SUM(ABS(tf_sub_total)),2) AS tf FROM v_student_payment_record_tf WHERE sy_id = ".$sy_id." AND stud_id = ".$stud_id."  GROUP BY stud_id, tf_months");
		$enrollment_data		= $this->module->get_query("SELECT * FROM v_student_fees WHERE sy_id = ".$sy_id."  AND stud_id = ".$stud_id."  ORDER BY sec_sort,stud_lastname ASC " );


		$cnt        = 1;
        $student_tf = 0;
        $mf         = 0;
        $mo_mf      = 300;
        $qua_mf     = 800;
        $sem_mf     = 2400;

        $jul        = 0;
        $aug        = 0;
        $sep        = 0;
        $oct        = 0;
        $nov        = 0;
        $dec        = 0;
        $jan        = 0;
        $feb        = 0;
        $mar        = 0;

        $total_tf   = 0;


        $total_jul = 0;
        $total_aug = 0;
        $total_sep = 0;
        $total_oct = 0;
        $total_nov = 0;
        $total_dec = 0;
        $total_jan = 0;
        $total_feb = 0;
        $total_mar = 0;

        $grand_total = 0;



        
        foreach($enrollment_data->result() as $s){
            $stud_id        = $s->stud_id;
            $stud_name      = $s->stud_lastname.', '. $s->stud_firstname;
            $lvl_id         = $s->lvl_id;
            $sec_name       = $s->sec_name;
            $payment_mode   = substr($s->se_mode_payment, 0, 1);
            $sib_discount   = $s->sad_has_sib_discount;
            $is_scholar     = $s->sa_is_scholar; 
            $scholar_tf     = $s->sad_scholar_sub_total;
            $fee_tf         = $s->fee_tf;
            $dept_name      = $s->dept_name;


            


            /*computaion for miscellaneous*/

            if($dept_name <> 'Pre-School'){
                if($payment_mode == 'M'){
                    $mf     = $mo_mf;
                }else if($payment_mode == 'Q'){
                    $mf     = $qua_mf;
                }else if($payment_mode == 'S'){
                    $mf     = $sem_mf;
                }else if($payment_mode == 'C'){
                    $mf      = 0;
                }
            }else{
                    $mf      = 0;
            }

            
            if($payment_mode == 'C'){
                    $student_tf = 0;
            }else{
                if($sib_discount == 'Y'){
                    $student_tf = $fee_tf - ($fee_tf * 0.10)  + $mf;
                }else{
                    if($is_scholar == 'Y'){
                        $student_tf = $scholar_tf;
                    }else{
                        $student_tf = $fee_tf + $mf;
                    }
                }
            }

            $tf_jul     = 0;
            $tf_aug     = 0;
            $tf_sep     = 0;
            $tf_oct     = 0;
            $tf_nov     = 0;
            $tf_dec     = 0;
            $tf_jan     = 0;
            $tf_feb     = 0;
            $tf_mar     = 0;

            $tf_sq2     = 0;
            $tf_sq3     = 0;
            $tf_sq4     = 0;

            $tf_s2      = 0;
            

            foreach($payment_data->result() as $p){
                $pstud_id   = $p->stud_id;
                $tf_months  = $p->tf_months;
                $paid_tf    = $p->tf;


                if($pstud_id == $stud_id){

                    switch ($tf_months) {
                        case 'July':
                            $tf_jul    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;

                        case 'August':
                            $tf_aug    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;

                        case 'September':
                            $tf_sep    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;

                        case 'October':
                            $tf_oct    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;

                        case 'November':
                            $tf_nov    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;

                        case 'December':
                            $tf_dec    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;

                        case 'January':
                            $tf_jan    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;

                        case 'February':
                            $tf_feb    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;

                        case 'March':
                            $tf_mar    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;

                        case '2nd Quarter [August]':
                            $tf_sq2    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;


                        case '3rd Quarter [October]':
                            $tf_sq3    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;


                        case '4th Quarter [January]':
                            $tf_sq4    =  empty($paid_tf) ? 0 : $paid_tf;
                            break;

                        case '2nd Semester [October]':
                            $tf_s2     =  empty($paid_tf) ? 0 : $paid_tf;
                            break;
                    }

                }

            }


            if($payment_mode == 'M'){
                $jul  = $tf_jul >= $student_tf ? 0 : $student_tf - $tf_jul;
                $aug  = $tf_aug >= $student_tf ? 0 : $student_tf - $tf_aug;
                $sep  = $tf_sep >= $student_tf ? 0 : $student_tf - $tf_sep;
                $oct  = $tf_oct >= $student_tf ? 0 : $student_tf - $tf_oct;
                $nov  = $tf_nov >= $student_tf ? 0 : $student_tf - $tf_nov;
                $dec  = $tf_dec >= $student_tf ? 0 : $student_tf - $tf_dec;
                $jan  = $tf_jan >= $student_tf ? 0 : $student_tf - $tf_jan;
                $feb  = $tf_feb >= $student_tf ? 0 : $student_tf - $tf_feb;
                $mar  = $is_scholar == 'Y' ? ($tf_mar >= $student_tf ? 0 : $student_tf - $tf_mar ) : 0;
            }else if($payment_mode == 'Q'){
                $jul  = 0;
                $aug  = $tf_sq2 >= $student_tf ? 0 : $student_tf - $tf_sq2;
                $sep  = 0;
                $oct  = $tf_sq3 >= $student_tf ? 0 : $student_tf - $tf_sq3;
                $nov  = 0;
                $dec  = 0;
                $jan  = $tf_sq4 >= $student_tf ? 0 : $student_tf - $tf_sq4;
                $feb  = 0;
                $mar  = 0;
            }else if($payment_mode == 'S'){
                $jul  = 0;
                $aug  = 0;
                $sep  = 0;
                $oct  = $tf_s2 >= $student_tf ? 0 : $student_tf - $tf_s2;
                $nov  = 0;
                $dec  = 0;
                $jan  = 0;
                $feb  = 0;
                $mar  = 0;
            }else if($payment_mode == 'C'){
                $jul  = 0;
                $aug  = 0;
                $sep  = 0;
                $oct  = 0;
                $nov  = 0;
                $dec  = 0;
                $jan  = 0;
                $feb  = 0;
                $mar  = 0;
            }


            $total_tf = $jul + $aug + $sep + $oct + $nov + $dec + $jan + $feb + $mar;
        }

        $balance = array(
        	'sec_name'		=> $sec_name,
        	'$payment_mode' => $payment_mode,
        	'is_scholar'	=> $is_scholar,
        	'student_tf' 	=> $student_tf,
        	'jul' 			=> $jul,
        	'aug' 			=> $aug,
        	'sep' 			=> $sep,
        	'oct' 			=> $oct,
        	'nov' 			=> $nov,
        	'dec' 			=> $dec,
        	'jan' 			=> $jan,
        	'feb' 			=> $feb,
        	'mar' 			=> $mar,
        	'total' 		=> $total_tf
        );

        echo '<pre>';
        print_r($balance);
        echo '</pre>';

        //echo $total_tf;


	}



}
